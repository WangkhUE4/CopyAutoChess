syntax = "proto3";
package msg;

/*******csprotocol.proto和ssprotocol.proto和res.proto中公共部分定义在此*********/

//通用原因
enum REASON {
  REASON_NULL          = 0;  //null
  SYSTEM               = 1;  //系统错误
  INACTIVE             = 2;  //不活跃
  RELOGIN              = 3;  //重登陆
  SERVER_STOPING       = 5;  //服务器停服中
  REDIRECT_HALL_SERVER = 6;  //重定向hallserver
  GROWUP_DEFEND_FROZEN = 7;  //成长守护被封
  REQUEST_TOO_FAST     = 8;  //请求太快
  PUNISHED             = 9;  //受到惩罚
  ADDICTION_LIMIT_AGE  = 10; //沉迷年龄限制
  GAME_OVER            = 11; //比赛已结束
  ADDICTION_LIMIT_TIME = 12; //沉迷时间限制
  BIND_TXPLAYER        = 13; //绑定TX角色
  SERVICE_CLOSE        = 14; //老版服务器下线关闭
  PS_REVOKED           = 15; //ps平台发生权利回退（玩家退款）
  PS_BIND_LY           = 16; // ps 绑定 ly 账号
  PS_UNBIND_LY         = 17; // ps 解绑 ly 账号
  ACTIVE_KICKOFF       = 18; //主动踢线
}

//通用原因
enum SOURCE {
  SOURCE_GM                     = 0;  //gm
  SOURCE_INIT                   = 1;  //新玩家初始化
  EVAL                          = 2;  //战斗结算
  MAIL                          = 3;  //邮件奖励
  BUY_EGG                       = 4;  //购买扭蛋
  SET_NAME                      = 5;  //修改名字
  SELL_ITEM                     = 6;  //出售装备
  SOURCE_CDKEY                  = 7;  //CDKEY
  BUY_PASSPORT_LEVEL            = 8;  //购买通行证等级
  GET_PASSPORT_LEVEL_AWARD      = 9;  //获取通行证等级奖励
  UPGRADE_PASSPORT              = 10; //升级通行证
  GET_PASSPORT_TASK_AWARD       = 11; //获取通行证任务奖励
  CHARGE                        = 15; //充值
  EVAL_FIRST_WIN                = 16; //首胜
  SOURCE_GM_EVAL                = 17; //gm结算
  SOURCE_RANKSEASON_EVAL        = 18; //赛季结算
  USE_BONUS_CARD                = 19; //使用加成卡
  SEASON_AWARD                  = 20; //赛季奖励
  SEASON_ACCOUNT_LEVEL_UP       = 21; //账号等级提升奖励
  GET_ACTIVITY_AWARD            = 22; //获取活动任务奖励
  MELEE_AWARD                   = 23; //乱斗奖励
  MAIL_ACTIVITY_REWARD          = 24; //邮件-活动奖励
  MAIL_MAINTAIN_COMPENSATE      = 25; //邮件-维护补偿
  MAIL_ACTIVITY_COMPENSATE      = 26; //邮件-活动补偿
  MAIL_OTHER_COMPENSATE         = 27; //邮件-其他补偿
  MAIL_INTERNAL_WELFARE         = 28; //邮件-内部福利
  PASSPORT_CLOSE                = 29; //通行证关闭
  ALPHA_ACTIVITY                = 30; //内测活动奖励
  ALPHA_ORDER                   = 31; //内测预约奖励
  ALPHA_COMPETE                 = 32; //内测活跃奖励
  ALPHA_CHARGE                  = 33; //内测激活奖励
  ALPHA_TEST                    = 34; //内测福利
  PASSPORT_RETURN               = 35; //通行证返利
  BUY_SPECIAL_GIFT              = 36; //购买特价礼包
  EXCHANGE_TIMED_GOODS          = 37; //兑换限时商品
  EXCHANGE_PASSPORT_GOODS       = 38; //兑换通行证商店商品
  USE_PASSPORT_TASK_CARD        = 39; //使用任务卡
  OPEN_RAND_CHEST               = 40; //开随机宝箱
  EGG_LOTTERY                   = 41; //扭蛋抽奖
  UNGET_WEEKLY_AWARD            = 42; //未领取周刷新奖励
  USE_ITEM                      = 43; //使用道具
  USE_EXPERIENCE_CARD           = 44; //使用体验卡
  BIND_PHONE_NUMBER             = 45; //首次绑定手机
  PASSPORT_WRONG_DATA           = 46; //通行证错误数据处理
  LAUNCH_PRIVILEGE_AWARD        = 47; // 启动特权奖励
  QQ_LOGIN_PRIVILEGE_AWARD      = 48; // qq会员登录特权奖励
  QQSVIP_LOGINCONTINUS_AWARD    = 49; // qqsvip7日登录特权奖励
  DAILY_SHARE_REWARD            = 50; //每日分享奖励
  BUY_MALL_GOODS                = 51; //购买商城商品
  DAY_SIGN_AWARD                = 52; //每日签到活动奖励
  ACT_ITEM_EXCH                 = 53; //集道具兑换活动
  CHARGE_RAW                    = 54; //充值不含赠送获得
  WX_VVIP_INIT                  = 55; //大玩家首奖励
  WX_VVIP_DAILY_AWARD           = 56; //微信大玩家普通日奖励
  WX_VVIP_DAILY_V_AWARD         = 57; //微信大玩家日奖励
  WX_VVIP_WEEKLY_V_AWARD        = 58; //微信大玩家周奖励
  WX_VVIP_ACC_LOGIN             = 59; //微信大玩家累计登录
  WX_VVIP_ACC_BATTLE            = 60; //微信大玩家累计战斗
  WX_VVIP_ACC_WIN               = 61; //微信大玩家累计吃鸡
  WX_VVIP_LVL_UP                = 62; //微信大玩家升级奖励
  WX_VVIP_S_CUP_UP              = 63; //微信大玩家单排升段
  WX_VVIP_D_CUP_UP              = 64; //微信大玩家双排升段
  WX_REDPKT_DAILY_AWARD         = 65; //微信大玩家红包活动每日奖励
  WX_SEND_RED_PACKET            = 66; //微信大玩家活动发红包
  WX_RECV_RED_PACKET            = 67; //微信大玩家活动领取红包
  WX_REDPKT_LIKE_AWARD          = 68; //微信大玩家点赞奖励
  WX_REDPKT_RANK_AWARD          = 69; //微信大玩家红包排行奖励
  INVITED_REGISTER_AWARD        = 70; //关系链邀请注册奖励
  LYDIAMOND_TRANSMIT            = 71; //龙渊甜甜圈迁移至米大师
  CHARGE_GBUY                   = 72; //团购返利充值次数超限兑换商品
  ACT_AUTO_EXCHAGE              = 73; //集道具兑换活动结算兑换
  COMPOSE                       = 74; //合成
  CHARGE_ACT_MALL               = 75; //商城活动购买
  AMAZON_GIFT_AWARD             = 76; //twitch prime奖励
  RECALL_AWARD                  = 77; //好友召回奖励
  TEAMPVPWIN_AWARD              = 78; //组队开黑吃鸡奖励
  MERGE_PLAYER                  = 79; //角色多选一合并道具
  ENROLL_TOURNAMENT             = 80; //赛事报名
  WEB_SHOPPING_CONSUME          = 81; //掌上商城扣款
  WEB_SHOPPING_REFUND           = 82; //掌上商城退款
  ALL_TOURNAMENT_CLASS_CANCEL   = 83; //所有级别取消
  TOURNAMENT_END                = 84; //赛事结束
  LUCK_STAR                     = 85; //幸运星
  TOURNAMENT_POINT_RANK         = 86; //全赛事积分排行奖励
  CLASS_POINT_RANK              = 87; //全级别积分排行奖励
  ROUND_POINT_RANK              = 88; //当前轮次积分排行奖励
  SELF_GET_POINT_AWARD          = 89; //玩家自己领取积分进度奖励
  MAIL_POINT_AWARD              = 90; //邮件补发积分进度奖励
  TOURNAMENT_OUT                = 91; //赛事淘汰奖励
  OBSERVE_TASK                  = 92; //观战任务奖励
  ENROLL_FAIL_RETURN            = 93; //报名失败返还
  CHEST_CUMULATE_AWARD          = 94; //宝箱保底
  WORKSHOP_TICKET               = 95; //创意工坊门票（具体门票类型在Consume的subSource进行区分）
  MAIL_AUTO_GET                 = 96; //自动领取邮件
  WORKSHOP_CURRENCY             = 97; //创意工坊货币 (欢乐豆)
  BOUNTY_ROOM                   = 98; //赏金赛
  TRANSFER_TO_OFFICIAL_ACCOUNT  = 99; //转账给官方账号
  PVP_INCOME                    = 100; // 局内收益
  SOURCE_SUMSANG_ORDERGIFT      = 101; //samsung注册礼包
  REPORT                        = 102; //举报
  PS_REVOKE                     = 103; //PS撤回 （玩家退款）
  GUILD_CREATE                  = 104; // 创建公会
  GUILD_NAME                    = 105; // 公会改名
  GUILD_SIGN                    = 106; // 公会头像
  CONVERT                       = 107; // 转化
  VNG_COMMENT_AWARD             = 108; // VNG商店评论奖励
  OPEN_CHOICE_CHEST             = 109; // 自选宝箱
  USE_PROTECTION_CARD           = 110; // 段位保护卡
  ADVERTISE_AWARD               = 111; // 广告奖励
  LEVELUP_CHEST                 = 112; // 升级宝箱
  TEACH_PASS_AWARD              = 113; // 教学关卡s

  // 开放平台相关
  OPEN_PLATFORM_INTEL_EXCHANGE  = 114; // intel 兑换码
  OPEN_PLATFORM_DAILY_SIGN      = 115; // 签到发奖
  OPEN_PLATFORM_ACTIVITY_REWARD = 116; // 运营活动
  OPEN_PLATFORM_TRADE           = 117; // 拍卖行交易
  OPEN_PLATFORM_GIVEAWAY        = 118; // 玩家赠送
  USE_PASSPORT_CARD             = 119; // 使用通行证激活卡
  COMPLETE_TASK                 = 120; // 完成任务
  CHEST_RARE_AWARD              = 121; // 宝箱稀有奖励
  BIGWINNER_AWARD               = 122;  // 大赢家低保
  BIGWINNER_BATTLEAWARD         = 123;  // 大赢家对局获得
  BIGWINNER_TICKET              = 124;  // 大赢家对局门票
  BIGWINNER_BATTLECONSUME       = 125;  // 大赢家对局消耗
  EXCHANGE_BUY                  = 126;  // 交易购买
  EXCHANGE_SELL                 = 127;  // 交易出售
  EXCHANGE_FAIL                 = 128; // 交易失败
  PVP_PLAY_REWARD               = 129; // PVP对局奖励
  DEAL_WEB_MAIL                 = 130; // 客户端操作邮件
  NORMAL_OUT_PUT                = 131;//通用产出
  ACTIVITY_PUZZLE_ITEM          = 132;//拼图活动
  BIGWINNER_SEASONEVAL          = 133;  // 大赢家赛季结算
  OPEN_PLATFORM_CONVERTITEM     = 134; // 龙渊币兑换物品
  PVE_CHALLENAGE_ITEM           = 135;//pve副本挑战活动
  OPEN_PLATFORM_CONVERTDIAMOND  = 136; // 龙渊币兑换甜甜圈
  PVE_CHALLENGE_RANK_AWARD      = 137; //pve挑战排行榜奖励
  SMELT_ITEM                    = 138;  //熔炼
  SOURCE_BIND_ACCOUNT           = 139; // 账号绑定
  SOURCCE_TRANS_OLD_ITEM        = 140; // 老物品转换
  SOURCE_IDENTIFY_ITEM          = 141; // 鉴定物品
  SOURCE_INSERT_AFFIX           = 142; // 物品镶嵌
  PLAT_GET_AWARD                = 143; //平台获取物品来源
  PVP_OB_REWARD                 = 144; //pvp观战奖励
  SET_DEFAULT_ATTRIBUTE         = 145; //设置玩家默认属性
  EXCHANGE_UPGRADE_PASSPORT     = 146; //平台升级通行证
  PVE_BUFF                      = 147; //pve 消耗
  //  SOURCE_IDENTIFY_ITEM      = 147; // 物品鉴定
  PVP_AUTHORITY_REWARD          = 148; //pvp官方自建房
  TD_BUY_CARD                   = 149; //塔防购买卡券
  MENTOR_SHIP_TASK              = 150; //师徒任务奖励

  //塔防相关
  TD_MATERIAL                   = 151; //材料
  TD_IN_USE                     = 152; //正在使用
  TD_TAKE_OFF                   = 153; //卸下
  TD_WEAR                       = 154; //穿戴
  TD_COMPOSE                    = 155; //合成
  TD_LEVEL_UP                   = 156; //升级
  TD_EXAWARDS                   = 157; //额外奖励
  TD_INIT                       = 158; //初始化
  TD_ON_HOOK                    = 159; //挂机
  TD_DRAW                       = 160; //抽奖
  TD_TRANS                      = 161; //转换
  TD_BUY                        = 162; //购买
  TD_CAL                        = 163; //结算
  TD_GM                         = 164; //GM

  BALANCE_RECHARGE              = 165; // 充值余额
  EXCHANGE_CONSUMES             = 166; //消耗

  //勋章任务完成
  COMPLETE_MEDAL_TASK           = 167; //勋章任务完成奖励来源

  //掌上龙渊限时掉落活动
  LY_ACTIVITY_LIMIT_DROP_AWARD  = 168;
  INSURANCE_CARD_USE            = 169;
  PASSPORT_SEASON_EVAL          = 170;//通行证赛季结算奖励
}

//玩家状态
enum PLAYERSTATUS {
  PLAYERSTATUS_OFFLINE         = 0;  //离线
  PLAYERSTATUS_HALL            = 1;  //大厅中
  PLAYERSTATUS_PVP             = 2;  //pvp中
  PLAYERSTATUS_TEAM            = 3;  //组队中
  PLAYERSTATUS_PVP_OFFLINE     = 4;  //pvp离线
  PLAYERSTATUS_OBSERVE         = 5;  //观战中
  PLAYERSTATUS_OBSERVE_OFFLINE = 6;  //观战离线
}

// 好友不可见状态
enum FRIENDINVISIBLE {
  FRIENDINVISIBLE_NONE  = 0; //
  FRIENDINVISIBLE_TRUE  = 1; //
  FRIENDINVISIBLE_FALSE = 2; //
}

//平台类型
enum PLATFORMTYPE {
  PLATFORMTYPE_OTHER   = 0; //其他
  PLATFORMTYPE_ANDROID = 1; //安卓
  PLATFORMTYPE_IOS     = 2; //ios
  PLATFORMTYPE_PC      = 3; //PC
  PLATFORMTYPE_PS4     = 4; //PS4
  PLATFORMTYPE_PS5     = 5; //PS5
  PLATFORMTYPE_END     = 6; //枚举边界
}

//磁块类型
enum MAGNETISMTYPE {
  MAGNETISMTYPE_NONE = 0;
  MAGNETISMTYPE_1    = 1;
  MAGNETISMTYPE_2    = 2;
  MAGNETISMTYPE_3    = 3;
  MAGNETISMTYPE_4    = 4;
}

// 战斗结束原因
enum PVPEND_REASON {
  PVPEND_GAMEOVER   = 0;  //战斗结束原因
  PVPEND_PLAYERDIE  = 1;  //玩家死亡
  PVPEND_LEAVEEARLY = 2;  //放弃游戏
}

enum CHANELTYPE {
  CHANELTYPE_GUEST                 = 0;       //游客
  CHANELTYPE_LY                    = 1;       //龙渊 {code:xxx}
  CHANELTYPE_4399                  = 2;       //4399 {state:xxx,uid:xxx}
  CHANELTYPE_360                   = 3;       //360  {access_token:xxx}
  CHANELTYPE_BAIDU                 = 4;       //百度  {access_token:xxx}
  CHANELTYPE_DANGLE                = 5;       //当乐  {access_token:xxx,umid:xxx}
  CHANELTYPE_KUPAI                 = 6;       //酷派  {access_token:xxx,openid:xxxx}
  CHANELTYPE_LIANXIANG             = 7;       //联想  {access_token:xxx}
  CHANELTYPE_XIAOMI                = 8;       //小米  {session:xxxx,uid:xxxx}
  CHANELTYPE_YINGYONGHUI           = 9;       //应用汇 {access_token:xxx}
  CHANELTYPE_OPPO                  = 10;      //OPPO  {access_token:xxx,ssoid:xxx}
  CHANELTYPE_VIVO                  = 11;      //VIVO  {access_token:xxx}
  CHANELTYPE_HUAWEI                = 12;      //华为   {gameAuthSign：xxxx,playerId:xxxx,ts:xxxx}
  CHANELTYPE_QQ                    = 13;      //qq(应用宝)    {openid：xxxx,access_token:xxxx,pf:xxxxx,pfkey:xxxx,pay_token:xxxx}
  CHANELTYPE_WX                    = 14;      //微信   {openid：xxxx,access_token:xxxx,pf:xxxxx,pfkey:xxxx}
  CHANELTYPE_UC                    = 15;      //UC {sid:xxxxx}
  CHANELTYPE_JINLI                 = 16;      //金立 {access_token:xxx,playerId:xxxx}
  CHANELTYPE_MEIZU                 = 17;      //魅族 {seesion_id:xxxx,uid:xxxx}
  CHANELTYPE_LY_IOS                = 18;      //IOS {code:xxx}{待删除}
  CHANELTYPE_TWITTER               = 19;      //推特 {oauth_token:xxxx,oauth_token_secret:xxxx}
  CHANELTYPE_LINE                  = 20;      //Line {access_token:xxxx} go line会改变行号，这里会报错，因此改成大写
  CHANELTYPE_DMM                   = 21;      //dmm
  CHANELTYPE_LY_JP                 = 22;      //龙渊(日本)
  CHANELTYPE_GOOGLE_PAY            = 23;      //google 支付
  CHANELTYPE_IOS_PAY               = 24;      //ios支付
  CHANELTYPE_BILI_GAME             = 25;      //B站
  CHANELTYPE_GOOGLE_LOGIN          = 26;  // google登录
  CHANELTYPE_FACEBOOK              = 27;  // facebook登录
  CHANELTYPE_OPPO_OVERSEAS         = 28;  // OPPO海外渠道
  CHANELTYPE_VIETNAM_IOS           = 29;  //越南IOS
  CHANELTYPE_VIETNAM_GOOGLE        = 30;  //越南谷歌
  CHANELTYPE_XIAOMI_OVERSEA        = 31;  //小米海外
  CHANELTYPE_XIAOMI_OVERSEA2       = 32;  //小米海外2
  CHANELTYPE_QQ_IOS_PAY            = 33;  //手Q IOS支付渠道
  CHANELTYPE_WX_IOS_PAY            = 34;  //微信IOS支付渠道
  CHANELTYPE_VIETNAM_VNG           = 35;  //越南VNG
  CHANELTYPE_GUEST_IOS             = 36;  //游客IOS
  CHANELTYPE_QQ_ANDROID_PAY        = 37;  //手Q 安卓支付渠道
  CHANELTYPE_WX_ANDROID_PAY        = 38;  //微信安卓支付渠道
  CHANELTYPE_VIVO_OVERSEA          = 39;  //vivo海外渠道
  //    CHANELTYPE_FACEBOOK_NEW     = 40;  //facebook新的appid
  CHANELTYPE_VNG_FIREBASE          = 41;  //vng的firebase登录
  CHANELTYPE_EPIC                  = 42;  //epic
  CHANELTYPE_WEB_FACEBOOK          = 43;  //web的facebook firebase登录
  CHANELTYPE_WEB_GOOGLE            = 44;  //web的google firebase登录
  CHANELTYPE_SUMSANG_PAY           = 45;  //sumsang充值
  CHANELTYPE_IOS                   = 46;  //ios登录


  CHANELTYPE_MAX_NUM               = 47;      //渠道类型暂不能超过47
  CHANELTYPE_MSDK_IOS              = 48;       //msdk apple 登录
  CHANELTYPE_SESSION               = 50;      //用于客户端在游戏中重连服务器
  CHANELTYPE_ID                    = 51;      //登陆某个玩家id(登陆者必须在白名单内)

  CHANELTYPE_AI_TRAINING           = 52;      //机器人训练使用此渠道，所有对手均为机器人

  CHANELTYPE_HUAWEI_OVERSEA        = 53;  //华为海外
  CHANELTYPE_LAUNCHER              = 54;    //launcher登录
  CHANELTYPE_LY_IOS_PAY            = 55;      //龙渊ios支付
  CHANELTYPE_PS4                   = 56;    // PS登录
  //CHANELTYPE_PS4_PAY		 = 57;		// PS4支付
  CHANELTYPE_LY_OPEN_PAY           = 58;      //龙渊端游开放平台支付
  CHANELTYPE_VIETNAM_GOOGLE_BATTLE = 59;   //vng battle的google支付渠道
  CHANELTYPE_CAFE_BAZAAR           = 60;  //伊朗CafeBazaar渠道支付
  CHANELTYPE_VIETNAM_IOS_BATTLE    = 61;   //vng battle的IOS支付渠道

  CHANELTYPE_YILEWAN               = 62;   // 盛天渠道（易乐玩）
  CHANELTYPE_FEIHUO                = 63;   // 飞火渠道
  CHANELTYPE_FEIHUO_PC             = 64;   // 飞火渠道
  CHANELTYPE_WEGAME                = 65;   // WeGame
  CHANELTYPE_WEGAME_IOS            = 66;   // WeGame 移动端
  CHANELTYPE_WEGAME_ANDROID        = 67;   // WeGame 移动端
  CHANELTYPE_PANGOLIN              = 68;   // 穿山甲广告
  CHANELTYPE_ADMOB                 = 69;   // google admob
  CHANELTYPE_PS5_PAY               = 70;   // ps5 支付
  CHANELTYPE_RAZER_PAY             = 71;   //雷蛇支付
  CHANELTYPE_GM_PAY                = 72; //gm补单
  CHANELTYPE_CODA_PAY              = 73; //coda支付
  CHANELTYPE_LYAPI                 = 74; //开放平台网页支付 ly yapi-ops
  CHANELTYPE_AD_FACEBOOK           = 75; //facebook广告
  CHANELTYPE_PAYPAL                = 76; // paypal 支付
  CHANELTYPE_XSOLLA                = 77; //Xsolla 支付
  CHANELTYPE_NOW_GG                = 78; // 海外now.gg登录
  CHANELTYPE_STEAM_PAY             = 79; //steam支付
}

//网络类型
enum NETTYPE {
  NETTYPE_NULL          = 0; //不可访问
  NETTYPE_MOBILENETWORK = 1; //移动网络
  NETTYPE_WIFI          = 2; //wifi
}

//登陆类型
enum LOGINTYPE {
  LOGIN_NORMAL    = 0; //正常登陆
  LOGIN_RECONNECT = 1; //重连登陆
  LOGIN_PVPFINISH = 2; //pvp结束的登陆
}

//启动类型
enum LAUNCHTYPE {
  LAUNCH_GAME   = 0;   //游戏启动
  LAUNCH_WECHAT = 1; //微信启动
  LAUNCH_QQ     = 2; //qq启动
}

enum CHANNELVIPTYPE {
  CHANNELVIP_NONE   = 0; //其它
  CHANNELVIP_QQVIP  = 1; //qq会员
  CHANNELVIP_QQSVIP = 2; //qq超级会员
}

//enum ATTRTYPE{
//    ATTRTYPE_NULL                   = 0;
//    ATTRTYPE_CHANNEL                = 229;  //渠道属性
//    ATTRTYPE_VERSION                = 230;  //版本号属性
//    ATTRTYPE_LANGUAGE               = 231;  //语种
//    ATTRTYPE_COUNTRY                = 232;  //国家
//    ATTRTYPE_SERVER                 = 233;  //服务器
//    ATTRTYPE_CHARGE_RESULT          = 236;  //支付状态
//    ATTRTYPE_FROZEN_TYPE            = 237;  //封禁类型
//    ATTRTYPE_NOTICE_TYPE            = 238;  //公告类型
//    ATTRTYPE_ACTIVITY_TYPE          = 239;  //活动类型
//    ATTRTYPE_ACTIVITY_LABEL         = 240;  //活动类型
//    ATTRTYPE_NOTICE_LABEL_TYPE      = 241;  //公告标签类型
//    ATTRTYPE_CDK_COND_STATUS        = 242;  //cdkey状态
//    ATTRTYPE_RANK_NAME              = 243;  //段位
//    ATTRTYPE_MONEY                  = 250;   //金币属性
//    ATTRTYPE_HEAD_PIC               = 251;  //头像属性
//    ATTRTYPE_CHESS_SKIN             = 252;
//    ATTRTYPE_SCENE                  = 253;
//    ATTRTYPE_ADS_TYPE               = 255;  //广告类型
//    ATTRTYPE_EMOTION                = 256;  //表情
//    ATTRTYPE_DAMAGE_EFFECT          = 257;  //伤害特效
//    ATTRTYPE_CHAT_BUBBLE            = 258;  //聊天气泡
//    ATTRTYPE_DIAMOND                = 467;  //付费糖果属性
//    ATTRTYPE_DIAMOND_TRANSACTION    = 468;  //付费糖果流水类型
//    ATTRTYPE_BATTLE_STAR            = 569;  //进阶通行证
//    ATTRTYPE_ADVANCED_PASSPORT      = 561;  //战星
//
//}

enum CHARGERESULT_TYPE{
  CHARGERESULT_TYPE_NULL    = 0;
  CHARGERESULT_TYPE_SUCCESS = 1;//成功
  CHARGERESULT_TYPE_FAIL    = 2;//失败
}

//宝箱开启方式类型
enum CHEST_OPEN_TYPE {
  CHEST_OPEN_TYPE_NULL = 0;
  HIGH_SECRET          = 1;
  ORDINARY_SECRET      = 2;
}

//物品类型
enum ITEMTYPE {
  ITEMTYPE_NULL           = 0;
  MONEY                   = 1;
  CHESS_PLAYER_MODEL      = 2;  //棋手模型
  SCENE                   = 3;  //未拆分前为棋盘+场景，拆分后卫棋盘皮肤
  HEAD_PIC                = 4;  //头像
  CHESS_PLAYER_ACTION     = 5;  //棋手动作
  CHESS_PLAYER_PICTURE    = 6;  //棋手立绘
  CHESS_PLAYER_VOICE      = 7;  //棋手语音
  BATTLE_STAR             = 8;  //战星(通行证等级经验)
  DIAMOND                 = 9;  //付费糖果
  PLAYER_EXP              = 10; //玩家账号经验
  EXP_BONUS_CARD          = 11; //经验加成卡
  CANDY_BONUS_CARD        = 12; //糖果加成卡
  RENAME_CARD             = 13; //改名卡
  DIRECT_LEVEL_UP         = 14; //战阶直升道具
  SCENE_SKIN              = 15; //场景皮肤 (暂时废弃)
  CHESS_EFFECTS           = 16; //棋子伤害特效
  CHESS_ACTION            = 17; //棋子动作
  CHESS_VOICE             = 18; //棋子语音
  EMOTION                 = 19; //聊天表情
  HEAD_PIC_FRAME          = 20; //头像框
  PERSONAL_BACKGROUND     = 21; //个人信息背景
  CHAT_BUBBLE             = 22; //聊天气泡
  ADVANCED_PASSPORT       = 23; //进阶通行证
  CHAT_DANMAKU            = 24; //聊天弹幕
  CHESS_COMBINE_EFFECT    = 25; //棋子合成特效
  STREAK_WIN_TOOLTIP      = 26; //连胜提示框
  HEAD_PIC_PENDANT        = 27; //头像挂件
  CHICKEN_ACTION          = 28; //棋手吃鸡特写动作
  ROUND_BEGIN_POSE        = 29; //回合开始棋手静态POSE展示
  PASSPORT_COIN           = 30; //通行证货币
  PASSPORT_TASK_CARD      = 31; //通行证任务卡
  RAND_CHEST              = 32; //随机宝箱, 自选宝箱
  EGG_TICKET              = 33; //扭蛋券
  EXPERIENCE_CARD         = 34; //体验卡
  DRESS_PIECE             = 35; //装扮碎片，代币(装扮币，棋手币，场景币)
  GINGERBREAD_MAN         = 36; //姜饼人(货币)
  TWO_SCENE               = 37; //双人棋盘
  CHESS_SKIN              = 38; //棋子皮肤
  DIRECT_MONEY            = 39; //直接使用人民币
  CHESS_PLAYER_WEAR       = 40; //棋手服装
  CHESS_PLAYER_WEAPON     = 41; //棋手武器
  CHESS_PLAYER_RIDE       = 42; //棋手坐骑
  KEY                     = 43; //钥匙
  TOURNAMENT_POINT_GLOBAL = 44; //全局赛事积分
  TOURNAMENT_POINT_PART   = 45; //局部赛事积分 只能赛事内部
  TOURNAMENT_POINT_ROUND  = 46; //轮次赛事积分
  TOURNAMENT_TICKET       = 47; //赛事门票
  DEDUCTION_COUPON        = 48; //折扣券
  DEDUCTION_MALL          = 49; //商城抵扣券
  IT_WORKSHOP_TICKET      = 50; //创意工坊门票
  CHESS_SKIN_DEBRIS       = 51;// 通用棋子皮肤碎片
  CHESS_PLAYER_DEBRIS     = 52;// 通用棋手碎片
  SCENE_DEBRIS            = 53;// 通用棋盘碎片
  EXPIRED_SKIN_DEBRIS     = 54;// 退环境皮肤碎片
  PROTECTION_CARD         = 56; // 段位保护
  PASSPORT_CARD           = 57; // 通行证激活卡
  BIGWINNER_SCORE         = 58; // 大赢家积分
  MEDAL                   = 59; // 勋章
  CHESSSKIN_SUIT          = 60; // 棋子套装
  SLAG                    = 61; // 熔渣
  ITEMTYPE_NOTUSED        = 62;
  ITEMTYPE_AFFIX_SAVER    = 63; // 词缀封存道具
  DANMAKU_FLOOR           = 64; // 弹幕底板
  ITEMTYPE_COOKIES        = 65; // 饼干
  ITEMTYPE_MAX_NUM        = 66;
  MEDAL_SCORE             = 67; //勋章任务积分
  LY_ACTIVITY_LIMIT       = 68; //掌上龙渊活动道具
  INSURANCE_CARD          = 69; //保险卡
}

//物品品质
enum ITEMQUALITY {
  NULL    = 0;

  WHITE   = 1;  //白
  GREEN   = 2;  //绿
  BLUE    = 3;  //蓝
  PURPLE  = 4;  //紫
  ORANGE  = 5;  //橙
  RED     = 6;  //红
  MAX_NUM = 7;
}

// 物品分享背景
enum ITEMSHAREBG {
  BG_NULL      = 0;

  BG_ORANGE    = 1;  //橙
  BG_BROWNNESS = 2;  //褐
  BG_BLUE      = 3;  //蓝
  BG_GREEN     = 4;  //绿
  BG_PURPLE    = 5;  //紫
  BG_GRAY      = 6;  //灰

  BG_MAX_NUM   = 7;
}

//物品累计类型
enum ITEMACCUMTYPE {
  NOT_MULTIPLY = 0;    //不可叠加
  MULTIPLY     = 1;    //可叠加
}

//物品售卖状态
enum ITEMSELLSTATUS {
  NOT_SELL        = 0;    //不可出售
  SELL            = 1;    //可出售
  INDATE_NOT_SELL = 2;    //活动有效期内不可出售,活动到期可出售
}

//pvp模式
enum PVPMODE{
  AUTO_CHESS       = 0;  //快速
  AUTO_CHESS_RANK  = 1;  //排位
  CUSTOM           = 2;  //自定义
  NEW_PLAYER       = 3;  //新手场
  MELEE            = 4;  //大乱斗
  TEAM_BATTLE      = 5;  //组队Battle(2V2V2V2 休闲)
  TEAM_BATTLE_RANK = 6;  //组队Battle(2V2V2V2 排位)
  COMBAT_TRAINING  = 7;  //三倍快乐模式
  NEW_PLAYER_GUIDE = 8;  //新手引导
  CUSTOM_BATTLE    = 9;  //自定义战斗模式
  TEACH_BATTLE     = 11; //教学关卡模式
  AI_TRAIN         = 12; //实战训练
  BIGWINNER        = 13; //大赢家
  TWOVSTWO         = 14; //2v2(休闲)
  FOURVSFOUR       = 15; //4v4(休闲)
  FOURVSFOUR_RANK  = 16; //4v4(排位)
  NIAN_PVE         = 17; //年兽pve
  PVE              = 18; //选技挑战pve
  OLD_AUTO_CHESS   = 19; //怀旧单人
  OLD_FOURVSFOUR   = 20; //怀旧四人休闲
  TOWER_DEFENSE    = 21; //塔防
  MODE_MAX_NUM     = 22; //pvp模式最大数
}

// 队伍分组
enum TEAMGROUP {
  TYPE_COMPETOTPR = 0; // 参赛组
  TYPE_OBSERVER   = 1; // 观众
  TYPE_REFEREE    = 2; // 裁判
  TYPE_MAX_NUM    = 3;
}

enum TEAMTYPE {
  NORMAL          = 0; // 普通房间
  OBSERVER        = 1; // OB(比赛房间)
  // STEAM_WORKSHOP  = 2; // 创意工坊房间
  TOURNAMENT_ROOM = 3; // 锦标赛房间
}

enum TEAMGROUPBEGINIDX {
  IDX_COMPETOTPR = 0;     // 选手
  IDX_REFEREE    = 1000;  // 裁判(最大1000个裁判)
  IDX_OBSERVER   = 2000;  // 观众
}

// 队伍操作类型
enum TEAMOP{
  SETTING           = 0; // 设置
  SWITCH_GROUP      = 1; // 队长调整组
  APPOINTLEADER     = 2; // 委任队长
  REFRESH_SLOT      = 3; // 刷新格子
  SELF_SWITCH_GROUP = 4; // 自己更换组
  INVITE_JOIN_TEAM  = 5; // 邀请入队
  CHANGE_NAME       = 6; // 修改名称
  SWITCH_SLOT       = 7; // 调换位置(选手席)
  BET_ON_BOUNTY     = 8; // 投注(赏金)
  UPDATE_DEBUFF     = 9; // 修改pve 词缀难度
}

enum OFFLINE_INVITE {
  TX_WX = 0;          // 微信
  TX_QQ = 1;          // QQ
}

enum WINTYPE {
  WINTYPE_FAIL       = 0;    //失败
  WINTYPE_WIN        = 1;    //胜利
  WINTYPE_DRAW       = 2;    //平局
  WINTYPE_NOT_UPDATE = 3;
}

enum RANKTYPE{
  RANKTYPE_NULL                  = 0;
  RANKTYPE_MMR                   = 1; //单人奖章排行榜
  RANKTYPE_MVP_AUTO_CHESS        = 2; //单人吃鸡休闲排行榜
  RANKTYPE_MVP_AUTO_CHESS_RANK   = 3; //单人吃鸡排位排行榜
  RANKTYPE_MVP_NEW_PLAYER        = 4; //单人吃鸡新手排行榜
  RANKTYPE_MVP_MELEE             = 5; //单人吃鸡梦境排行榜
  RANKTYPE_MMR_TEAM_BATTLE       = 6; //2V2奖章排行榜
  RANKTYPE_MVP_TEAM_BATTLE       = 7; //2V2吃鸡休闲排行榜
  RANKTYPE_MVP_TEAM_BATTLE_RANK  = 8; //2V2吃鸡排位排行榜
  RANKTYPE_BATTLE_STAR           = 9; //证书等级榜
  RANKTYPE_PLAYER_LEVEL          = 10;//角色等级
  RANKTYPE_TOURNAMENT            = 11;//锦标赛排行榜
  RANKTYPE_BIGWINNER_SEASONSCORE = 12;//大赢家赛季积分
  RANKTYPE_FOURVSFOUR_MMR_RANK   = 13;//4V4 mmr排行榜
  RANKTYPE_MENTOR                = 14; // 师师傅排行榜
  RANKTYPE_MAX_NUM               = 15;
}

enum FROZEN_TYPE{
  FROZEN_TYPE_NULL          = 0;
  FROZEN_TYPE_ACCOUNT       = 1; //封号
  FROZEN_TYPE_DEV           = 2; //封设备
  FROZEN_TYPE_CHAT          = 3; //世界聊天禁言
  FROZEN_TYPE_PUBLISH_STATE = 4; //封禁发布圈子状态
  FROZEN_TYPE_GROWUP_DEFEND = 5; //成长守护封号
  FROZEN_TYPE_MAX_NUM       = 6;
}

enum NOTICETYPE{
  NOTICETYPE_NULL                = 0;
  NOTICETYPE_OPEN                = 1;  //开服
  NOTICETYPE_STOP                = 2;  //停服
  NOTICETYPE_FROZE_ACCOUNT       = 3;  //封账号
  NOTICETYPE_FROZE_DEV           = 4;  //封设备
  NOTICETYPE_LY_WHITE_LIST       = 5;  //龙渊白名单
  NOTICETYPE_ACTIVE_CODE         = 6;
  NOTICETYPE_APK_UPGRADE         = 7;  //apk更新提示
  NOTICETYPE_RESOURCE_UPGRADE    = 8;  //资源更新提示
  NOTICETYPE_FROZE_GROWUP_DEFEND = 9;//成长守护封号
  NOTICETYPE_PRELOGIN            = 10;  //登录前公告
  NOTICETYPE_MAX_NUM             = 11;
}

enum NOTICETAP {
  NOTICETAP_NEW         = 0; //新闻公告
  NOTICETAP_ACTIVITY    = 1; //活动公告
  NOTICETAP_SPECIAL     = 2; //特别公告
  NOTICETAP_COMPETITION = 3; //比赛公告
}

enum PICNOTICEJUMPTYPE {
  PICNOTICEJUMPTYPE_IN  = 0; //图片公告内链类型
  PICNOTICEJUMPTYPE_OUT = 1; //图片公告外链类型
}

enum ADSTYPE {
  ADSTYPE_NULL        = 0;
  ADSTYPE_PVP_LOADING = 1;
}

enum ADSPAYTYPE {
  ADSTYPE_ALL     = 0;
  ADSTYPE_NOT_PAY = 1;
  ADSTYPE_PAY     = 2;
}

enum PASSPORTTYPE {
  PASSPORT_UNACTIVATED     = 0; //未激活的
  PASSPORT_FREE            = 1; //免费通行证
  PASSPORT_ADVANCE         = 2; //进阶版通行证(付费)
  PASSPORT_ADVANCE_SUPER   = 3; //进阶版组合包
  PASSPORT_ADVANCE_SEGMENT = 4; //进阶版通行证(分段)
  PASSPORT_ADVANCE_YEAR    = 5; //进阶版通行证(年卡)
}

enum RELOADTYPE {
  RELOAD_LANGUAGE   = 0;    //多语言
  RELOAD_WHILE_LIST = 1;    //白名单
}

enum TRANSACTION {
  TRANSACTION_ALL = 0; //全部
  TRANSACTION_GET = 1; //获取
  TRANSACTION_USE = 2; //使用
}

enum CONDTYPE {
  CONDTYPE_NULL                       = 0;
  CHESS_PLAYER_LEVEL                  = 100;    //棋手达到X级
  ACCUMULATIVE_RANK                   = 200;    //累计X次对局获得X名以上的排名
  CONTINUOUS_RANK                     = 201;    //连续X次对局获得X名以上的排名
  FIRST_PAY                           = 202;    //首充达成
  ACCUMULATIVE_PAY                    = 203;    //累计充值
  ACCUMULATIVE_COST                   = 204;    //累计消耗
  ACCUMULATIVE_RANK_FETTER            = 205;    // 使用指定羁绊获取指定名次

  //战斗数据
  ROUND_WIN                           = 300;    //在不同对局中完成指定回合胜利条件指定次数
  ROUND_STREAK_WIN                    = 301;    //在不同对局中完成指定回合连胜条件指定次数
  ACCUMULATIVE_ROUND_WIN              = 302;    //累计达到指定回合胜利
  ALIVE_ROUND                         = 400;    //在不同对局中存活指定回合
  BUY_CHESS_PRO                       = 402;    //在不同对局中完成指定购买职业棋子条件指定次数
  BUY_CHESS_RACE                      = 403;    //在不同对局中完成购买指定种族棋子指定次数
  ACCUMULATIVE_BUY_CHESS              = 405;    //累计购买指定棋子指定数量
  ACCUMULATIVE_BUY_CHESS_PROFESSION   = 406;    //累计购买指定职业棋子指定数量
  ACCUMULATIVE_BUY_CHESS_RACE         = 407;    //累计购买指定种族棋子指定数量
  ACCUMULATIVE_BUY_CHESS_QUALITY      = 408;    //累计购买指定品质棋子指定数量
  SINGLE_ROUND_CHESS_BATTLE           = 500;    //在不同对局中完成指定单回合棋子战斗条件指定次数
  SINGLE_ROUND_CHESS_PRO_BATTLE       = 501;    //在不同对局中完成指定单回合职业棋子战斗条件指定次数
  SINGLE_ROUND_CHESS_RACE_BATTLE      = 502;    //在不同对局中完成指定单回合种族棋子战斗条件指定次数
  SINGLE_ROUND_CHESS_QUALITY_BATTLE   = 503;    //在不同对局中完成指定单回合品质棋子战斗条件指定次数
  SINGLE_ROUND_CHESS_STAR_BATTLE      = 504;    //在不同对局中完成指定单回合星级棋子战斗条件指定次数
  COMPOSE_CHESS_STAR_PRO              = 601;    //在不同对局中完成升星指定星级职业棋子条件指定次数
  COMPOSE_CHESS_STAR_QUALITY          = 602;    //在不同对局中完成升星指定星级品质棋子条件指定次数
  ACCUMULATIVE_COMPOSE_CHESS          = 603;    //累计升星指定棋子指定数量
  ACCUMULATIVE_COMPOSE_CHESS_STAR_PRO = 604;    //累计升星指定星级指定职业棋子指定数量
  ACCUMULATIVE_COMPOSE_CHESS_STAR     = 606;    //累计升星指定星级棋子指定数量
  SELL_CHESS_QUALITY                  = 703;    //在不同对局中完成出售指定品质棋子条件指定次数
  ACCUMULATIVE_SELL_CHESS             = 705;    //累计出售指定棋子指定数量
  ACCUMULATIVE_SELL_CHESS_STAR        = 709;    //累计出售指定星级棋子数量
  ACCUMULATIVE_PICKUP_EQUIP           = 801;    //累计失去指定装备指定数量
  COMPOSE_EQUIP                       = 900;    //在不同对局中完成合成指定装备条件指定次数
  ACCUMULATIVE_COMPOSE_EQUIP          = 901;    //累计合成指定装备指定数量
  ACCUMULATIVE_COMPOSE_EQUIP_QUALITY  = 902;    //累计合成指定品质装备指定数量
  ACCUMULATIVE_GAIN_GOLD              = 1004;   //累计获取指定数量金币
  ACCUMULATIVE_GAIN_GOLD_STREAK       = 1005;   //通过连胜累计获取指定数量金币
  ACCUMULATIVE_GAIN_GOLD_LOSS         = 1006;   //通过连败累计获取指定数量金币
  ACCUMULATIVE_GAIN_GOLD_INTEREST     = 1007;   //通过利息累计获取指定数量金币
  USE_GOLD                            = 1100;   //在不同对局中完成指定消耗金币条件指定次数
  ACCUMULATIVE_USE_GOLD               = 1104;   //累计消耗指定数量金币
  ACCUMULATIVE_USE_GOLD_UPGRADE       = 1105;   //通过升级消耗指定数量金币
  ACCUMULATIVE_USE_GOLD_CHESS         = 1106;   //通过购买棋子累计消耗指定数量金币
  ACCUMULATIVE_USE_GOLD_REFRESH       = 1107;   //通过刷新商店累计消耗指定数量金币
  CHESS_STAR_STAR_BATTLE_AND_WIN      = 1314;   //在不同对局中完成指定上阵星级棋子击败敌方指定星级棋子条件指定次数
  CHESS_PRO_RACE_BATTLE_AND_WIN       = 1327;   //在不同对局中完成指定上阵职业棋子击败敌方指定种族棋子条件指定次数

  ACCOUNT_LEVEL                       = 1400;   //达到指定账号等级
  INDIVIDUAL_PVP                      = 1500;   //单人PVP
  TEAMING_PVP                         = 1502;   //组队PVP
  INDIVIDUAL_TEAMING_PVP              = 1503;   //任意状态下的PVP
  FINISH_PVP                          = 1504;   //指定模式的pvp
  FINISH_DAY_FIRST_WIN                = 1505;   //每日首胜
  PASS_TEACH_BATTLE                   = 1506;   //通关训练营指定关卡
  ACCUMULATIVE_PASS_TEACH_BATTLE      = 1507; // 在多多训练营中累计完成X个关卡
  GAIN_ITEM_BY_ID                     = 1600;   //累计获取指定ID指定数量的物品
  GAIN_ITEM_BY_TYPE                   = 1601;   //累计获取指定类型指定数量的物品
  GAIN_ITEM_BY_CLASS1                 = 1602;   //累计获取指定一级类型指定数量的物品
  GAIN_DIFF_ITEM_SKIN_QUALITY         = 1603;   //累计解锁X个不同的X星棋子皮肤
  GAIN_FROM_SMELT_ITEM                = 1604;   //熔炼获得物品
  ACCUMULATIVE_SHARE                  = 1900;   //累计指定次数分享
  DAILY_SHARE                         = 1901;   //每日分享(活动分享)
  ACCUMULATIVE_FOLLOW_EACH_OTHER      = 2003;   //累计指定人数互相关注
  COMPLETE_SEASON_CHALLENGE           = 2101;   //完成指定次数赛季任务
  COMPLETE_WEEK_CHALLENGE             = 2102;   //完成指定次数指定周数周任务
  ACCUMULATIVE_WEEK_CHALLENGE         = 2103;   //累计完成指定次数周任务
  ACCUMULATIVE_NEW_PLAYER_TASK        = 2104;   //累计完成指定次数新手任务
  COMPLETE_CURRENT_WEEK_CHALLENGE     = 2105;   //累计完成当前周指定次数周任务
  ACCUMULATIVE_RETURN_TASK            = 2106;   //累计完成回流任务
  ACCUMULATIVE_TASK                   = 2107;   //累计完成限时任务
  ACCUMULATIVE_NEW_PLAYER_ACT_TASK    = 2108;   //累计完成指定活动指定次数新手任务
  SKIP_CLIENT_INTERFACE               = 2200;   //累计完成跳转指定客户端界面指定次数
  PLAYER_CUP                          = 2300;   //玩家达到指定段位
  SEASON_PLAYER_CUP                   = 2301;   //赛季玩家达到指定段位
  HISTORY_MAX_PLAYER_CUP              = 2302;   //玩家历史段位达到指定段位
  ACCUMULATIVE_BUY_EGG                = 2400;   //累计抽取扭蛋指定次数
  ACCUMULATIVE_LOGIN                  = 2500;   //累计登录
  SEASON_ACCUMULATIVE_LOGIN           = 2501;   //赛季累计登录
  FRIENDS_INGAME                      = 2600;   //同玩好友人数
  ALL_FIGHT_TOTAL                     = 2700;   //全民对局总共达到指定次数
  ALL_FIGHT_ONE                       = 2701;   //全民对局个人达到指定次数
  REALATIONSHIP_STAR                  = 2800;   //关系链幸运星
  BUFF_ACT                            = 2801;   //buff活动效果

  //观战
  OBSERVE_DURATION                    = 2802;   //观战时长
  OBSERVE_MODE                        = 2812;   //观战模式

  //战友招募
  RECRUIT_PLAYER_BATTLECOUNT          = 2803;    //战友招募-被招募者对局数
  RECRUIT_WITHINVITER_FIGHT           = 2804;    //战友招募-同招募者对局
  RECRUIT_WITHRECRUIT_FIGHT           = 2805;    //战友招募-同被招募者对局

  // 公会
  GUILD_CREATE_JOIN                   = 2900; //创建加入公会

  CHANGE_RECOMMEND_LINEUP             = 2950; //更换推荐阵容
  CHANGE_DRESS                        = 2951; //更换装扮

  //玩法
  GAIN_WINNER_SCORE                   = 3200; // 在大赢家模式累计赢取X积分
  PASSPORT_TASKS_COMPLETED            = 3201; // 大赢家模式中持有X积分
  SEASON_GAIN_WINNER_SCORE            = 3202; // 赛季大赢家模式中持有X积分
  PVE_GAIN_SCORE                      = 3203; // PVE_活动积分
  PVE_CUSTOM_GAIN_SCORE               = 3204; // 创意工坊 PVE积分

  ACCUMULATIVE_COLLECT_SET_MEDAL      = 3300; // 搜集套组勋章
  SEASON_PLAYER_OVER_CUP              = 3301; // 本赛季历史最高段位到达X（只在赛季结算触发）
  ACCUMULATIVE_UNLOCK_CHESS_STAR      = 3400; // 累计解锁X个棋子图鉴星数
  ACCUMULATIVE_TOURNAMENT_BATTLE      = 3600; // 累计进行x次锦标赛x阶段的对局

  //师徒任务
  MENTOR_INVITE_MSG                   = 4000; //师徒 发送邀请
  MENTOR_PLAYER_CUP                   = 4001; //师徒 任务
  MENTOR_GRADUATE_PUPIL_NUM           = 4002; //徒弟出师数量任务
  // for program
  COMMON_PAY                          = 5000; //充值
}

enum PASSPORTTASKTYPE {
  PASSPORTTASKTYPE_NULL = 0;
  WEEKLY_TASK           = 1; //周任务
  WEEKLY_REFRESH        = 2; //每周刷新任务
  SEASON_TASK           = 3; //赛季任务
  DAILY_REFRESH         = 4; //每日刷新任务
  DAILY_TASK            = 5; //每日任务
}

//商店类型
enum SHOPTYPE {
  SHOPTYPE_NULL           = 0;
  SHOPTYPE_EGG            = 1; //扭蛋机
  SHOPTYPE_SPECIAL_GIFT   = 2; //特价礼包
  SHOPTYPE_TIMED_EXCHANGE = 3; //限时兑换
}

enum PAYRESULT {
  PAYRESULT_SUCCESS       = 0;    //成功
  PAYRESULT_FAIL          = 1;    //失败
  PAYRESULT_OTHER         = 2;    //其他
  PAYRESULT_NO_ORDER_DATA = 3;    //没有订单数据
  PAYRESULT_ORDER_PAYED   = 4;    //订单已经支付
}

enum CURRENCYTYPE {
  CURRENCY_RMB               = 0;    //人民币
  CURRENCY_DOLLAR            = 1;    //美元
  CURRENCY_RUPEE             = 2;    //印度卢比
  CURRENCY_INDONESIAN_RUPIAH = 3;    //印度尼西亚盾
  CURRENCY_TAIWAN_DOLLAR     = 4;    //台币
  CURRENCY_VIETNAMESE_DONG   = 5;    //越南盾
  CURRENCY_THAI_BAHT         = 6;    //泰铢
  CURRENCY_PHILIPPINE_PESO   = 7;    //菲律宾比索
  CURRENCY_RINGGIT           = 8;    //林吉特
  CURRENCY_BRAZIL_BRL        = 9;    //巴西雷亚尔
  CURRENCY_IRAN_TOMANS       = 10;   //伊朗 tomans
  CURRENCY_SINGAPORE_SGD     = 11;   //新加坡
  CURRENCY_UNKNOWN           = 99;   //未知（用于海外支付货币不确定情况）
}

enum NOTICESHOWTYPE {
  NOTICESHOW_NULL    = 0;
  NOTICESHOW_DEFAULT = 1;    //普通公告
  NOTICESHOW_POP     = 2;    //弹窗公告
}

enum NOTICECONTENTTYPE {
  NOTICECONTENT_NULL         = 0;
  NOTICECONTENT_TEXT         = 1;    //文字内容公告
  NOTICECONTENT_PICTURE      = 2;    //图片内容公告
  NOTICECONTENT_WEB          = 3;    //网页公告
  NOTICECONTENT_PICTURE_TEXT = 4;    //图文公告
}

enum ACTIVITYTYPE {
  ACTIVITY_NULL               = 0;
  ACTIVITY_NEW_PLAYER         = 1;    //新手活动
  ACTIVITY_FIRST_CHARGE       = 2;    //首充活动
  ACTIVITY_PASSPORT_TYPE_2    = 3;    //直购通行证type 2
  ACTIVITY_PASSPORT_TYPE_3    = 4;    //直购通行证组合包 type 3
  ACTIVITY_FRIENDS_INGAME     = 5;    //同玩好友
  ACTIVITY_ALL_FIGHT          = 6;    //全民对局
  ACTIVITY_SHARING_CODE       = 7;    //主播推广码
  ACTIVITY_ACCUMULATIVE_PAY   = 8;    //累计充值
  ACTIVITY_ACCUMULATIVE_COST  = 9;    //累计消费
  ACTIVITY_FIRST_PAY          = 10;   //首充NEW
  ACTIVITY_ITEM_EXCHANGE      = 11;   //集道具兑换
  ACTIVITY_REALATIONSHIP_STAR = 12;   //关系链幸运星
  ACTIVITY_LIMIT_TIME_BUFF    = 13;   //限时活动BUFF
  ACTIVITY_GROUP_BUY          = 14;   //团购返利
  ACTIVITY_H5_LINKS           = 15;   //跳转h5界面
  ACTIVITY_RETURN             = 16;   //老玩家回归
  ACTIVITY_WXVVIP_RED_PACKET  = 17;   //微信大玩家红包活动
  ACTIVITY_SHARE              = 18;   //分享活动(棋子)
  ACTIVITY_CYBER_WEEK         = 19;   //礼包活动Cyber Week
  ACTIVITY_YEAR_END_GIFTS     = 20;   //礼包活动Year End Gifts
  ACTIVITY_QUESTIONNAIRE      = 21;   //问卷类活动
  ACTIVITY_TRAFFIC_STEERING   = 22;   //定向流量
  ACTIVITY_LIMIT_TIME_MALL    = 23;   //限时活动商城
  ACTIVITY_SHARE_NEWS         = 24;   //图片分享(新闻)
  ACTIVITY_H5_LINKS_OVERSEAS  = 25;   //跳转海外h5界面
  ACTIVITY_H5_TWITCH_PRIME    = 26;   //跳转海外h5界面
  RETURN_SLIDESHOW            = 27;   // 回归玩家轮播图广告
  ACTIVITY_RECRUIT            = 28;   //招募活动
  ACTIVITY_RETURN_MALL        = 29;   //回流商店
  ACTIVITY_CHEST              = 30;   //宝箱升级活动
  ACTIVITY_LUCK_MALL          = 31;   //幸运星商城活动
  ACTIVITY_SIGN               = 32;   //签到活动
  ACTIVITY_TASK               = 33;   //限时任务活动
  ACTIVITY_GOA_QUESTIONNAIRE  = 34;   //平台问卷活动
  ACTIVITY_NEWPLAYER_GIFT     = 35;   //新手礼包
  ACTIVITY_NEWPLAYER_MALL     = 36;   //新手商店
  ACTIVITY_PUZZLE             = 37;   //拼图活动
  ACTIVITY_PVE_CHALLENGE      = 38;   //PVE副本挑战活动
  ACTIVITY_RETURN_GUILD       = 39;   //回流指引
  ACTIVITY_NEWPLAYER_SHORTCUT = 40;   //新手活动快捷方式
  ACTIVITY_PVE                = 41;   //pve积分活动
  ACTIVITY_LY_LIMIT           = 42;   //掌上龙渊限时活动
}

enum HISTORYPVPSHOWPERMISSION {
  SHOWPERMISSION_ALL    = 0; //允许所有人
  SHOWPERMISSION_FANS   = 1; //允许互粉好友
  SHOWPERMISSION_DENIED = 2; //禁止所有
}

enum CHATTYPE {
  CHATTYPE_All               = 0; //所有
  CHATTYPE_WORLD             = 1; //世界聊天
  CHATTYPE_PERSONAL          = 2; //私聊
  CHATTYPE_TEAM              = 3; //队伍聊天
  CHATTYPE_BATTLE            = 4; //局内聊天
  CHATTYPE_CAMP              = 5; //阵营聊天
  CHATTYPE_INVITE            = 6; //邀约聊天
  CHATTYPE_WATCHER           = 7; //观战聊天
  CHATTYPE_BATTLE_OBSERVER   = 8;   //OB局内观众频道(观众和裁判)
  CHATTYPE_BATTLE_COMPETOTPR = 9;   //OB局内战斗频道(选手和裁判)
  CHATTYPE_STEAM             = 10; // 创意工坊世界聊天
  CHATTYPE_GUILD             = 11; // 公会聊天
}

enum CHATSOURCETYPE {
  PLAYER                       = 0; // 玩家消息
  RECOMMEND_SHARE              = 1; // 分享消息
  CHATSOURCETYPE_SHOW_MEDAL    = 2; // 炫耀勋章
  CHATSOURCETYPE_MEDAL_EMOTION = 3; // 勋章表情
  COMMON_JSON_SHARE            = 4; // 通用的json 分享消息 以后客户端 都只用这一个类型 之前阵容分享 就不动
  VOICE                        = 5; // 语音消息
}

//注:开关控制标记id,定下来就只能增加或废弃,不能删改
enum SWITCHTYPE {
  SWITCHTYPE_NULL                = 0;      //无
  BAG_SELL_ITEM                  = 100;    //禁止背包道具使用/卖道具
  CHAT_All                       = 200;    //禁止所有种类的聊天
  PVPMODE_AUTO_CHESS             = 300;    //禁止pvp模式_快速
  PVPMODE_AUTO_CHESS_RANK        = 301;    //禁止pvp模式_排位
  PVPMODE_CUSTOM                 = 302;    //禁止pvp模式_自定义
  PVPMODE_NEW_PLAYER             = 303;    //禁止pvp模式_新手场
  PVPMODE_MELEE                  = 304;    //禁止pvp模式_大乱斗
  PVPMODE_TEAM_BATTLE            = 305;    //禁止pvp模式_组队Battle(2V2V2V2 休闲)
  PVPMODE_TEAM_BATTLE_RANK       = 306;    //禁止pvp模式_组队Battle(2V2V2V2 排位)
  PVPMODE_TEACH_BATTLE           = 307;    //禁止pvp模式_新手教学战役
  PVPMODE_COMBAT_TRAINING        = 308;    //禁止pvp模式_三倍快乐模式
  PVPMODE_AI_TRAIN               = 309;    //禁止pvp模式_实战训练模式
  PVPMODE_FOURVSFOUR             = 310;    //禁止pvp模式_4v4（休闲）
  PVPMODE_FOURVSFOUR_RANK        = 311;    //禁止pvp模式_4v4（排位）
  MAKE_ROOM                      = 400;    //禁止自建房间和id邀请
  MAKE_TEAM                      = 500;    //禁止组队
  ACTIVITY_NEWPLAYER             = 600;    //禁止活动_迎新活动(不触发这个活动,但不隐藏入口)
  SHOP_EGG                       = 700;    //禁止商城_购买扭蛋(点的时候,说没有开启)
  SHARE_FINGHT                   = 800;    //禁止结算分享(客户端控制)
  SHARE_PLATER_INFO              = 801;    //禁止个人信息分享(客户端控制)
  PASSPORT                       = 900;    //禁止骑士证书(服务器不触发累计,也要发给客户端,客户端隐藏界面)
  SYSTEM_MAIL                    = 1000;    //禁止触发系统邮件(触发条件自动发送：如举报反馈邮件)
  RANK_WORLD                     = 1100;    //禁止排行榜_世界(对单人,禁止参与,且清除排行榜数据)(对全服,不清排行榜数据,只禁止查看)
  RANK_FOLLOW                    = 1101;    //禁止排行榜_关注(打标记到玩家身上,客户端自己屏蔽)
  OPEN_GM                        = 1200;    //开启GM指令(有这个标记,表示能使用GM指令)(不支持在线开启时间相关GM指令)
  CLOSE_GM_LV_LIMIT              = 1201;    //关闭世界聊天,等级限制
  ADD_FRIEND                     = 1300;    //禁添加好友
  PVPMODE_ALL_WITHOUT_NEW_PLAYER = 1400;    //禁止所有匹配（除了新手模式）
  SWITCH_TOURNAMENT              = 1500;    //赛事
  SWITCH_OBSERVE                 = 1600;    //观战
  SWITCH_LUCKSTAR                = 1700;    //幸运星签到(服务器屏蔽)
  SWITCH_OPENPLAT                = 1800;    //开放平台
  SWITCH_GROUPBUY                = 1900;    //团购返利
}

//商城栏位类型
enum MALLTABTYPE {
  TAB_NULL       = 0;
  TAB_TIME_LIMIT = 1;    //限时栏位
  TAB_GENERAL    = 2;    //常规
  TAB_RECOMMEND  = 3;    //推荐
  TAB_ACTIVITY   = 4;    //商城活动
  TAB_RETURN     = 5;    //回流商店
  TAB_LUCK       = 6;  //幸运星商店
  TAB_BIGWINNER  = 7;  //大赢家栏位信息
}

//商城推荐页公告跳转类型
enum SKIPTYPE {
  PAGE  = 0; //跳转界面
  GOODS = 1; //跳转商品
  VIDEO = 2; //跳转视频
}

// 进队方式类型
enum JOINTEAMTYPE {
  Invited        = 0;    //被邀请进入队伍
  Num            = 1;    //通过输入队伍号加入（房间）
  Link           = 2;    //通过邀约频道加入
  OfflineInvited = 3;    //通过离线邀请
  PlatMatch      = 4;    //通过平台组队进入
  Tournament     = 5;    //锦标赛
  Reconnect      = 6;  //断线重连
  InvalidType    = 254;  //无效类型
}

// 活动buff类型
enum BUFFACTSTATUS {
  BUFFACTSTATUS_NONE    = 0;    //buff没有生效
  BUFFACTSTATUS_START   = 1;    //buff开始生效
  BUFFACTSTATUS_END     = 2;    //buff活动结束
  BUFFACTSTATUS_ENDSHOW = 3;    //buff活动结束显示
}

enum SMSTYPE {
  SMSTYPE_LY      = 0; //ly阿里云短信平台
  SMSTYPE_TENCENT = 1; //腾讯短信平台
}

//观战列表类型
enum OBSERVELISTTYPE {
  OBSERVE_RECOMMEND  = 0; //推荐
  OBSERVE_FOLLOW     = 1; //关注
  OBSERVE_TOURNAMENT = 2; //赛事推荐
}

//web操作类型
enum WEBOP {
  WEBOP_NULL                         = 0; //
  WEBOP_BIND_ACC                     = 1; // 账号绑定
  WEBOP_TRANSFER_TO_OFFICIAL_ACCOUNT = 2; // 转账给官方账号
  WEBOP_EXCHANGE_SELL                = 3; // 交易所-上架商品
  WEBOP_EXCHANGE_GIFT                = 4; // 交易所-赠送
  WEBOP_EXCHANGE_RECEIVE             = 5; // 交易所-赠送接受
}

//web操作结果
enum WEBRESULT {
  WEB_RESULT_OK     = 0;  //确认
  WEB_RESULT_CANCEL = 1;  //取消
}

//玩家收到惩罚的行为
enum PUNISHMENTBEHAVIOR {
  BEHAVIOR_NULL             = 0;    //没有触发行为
  MATCH_SUCCESS_NOT_CONFIRM = 1;    //匹配成功未确认
  MATCH_SUCCESS_OFFLINE     = 2;    //游戏确认阶段离线
  GIVE_UP_AHEAD             = 3;    //提前投降
  AWAY_FROM_KEYBOARD        = 4;    //挂机
}

//惩罚方式
enum PUNISHMENTTYPE {
  PUNISHMENT_NULL  = 0;    //没有惩罚
  FORBID_PLAY_GAME = 1;    //禁止开始游戏
  FORBID_CHAT      = 2;    //禁止聊天
  FROZEN_ACCOUNT   = 3;    //封禁账号
  FROZEN_DEVICE    = 4;    //封禁设备
}

//banner类型
enum BANNERTYPE {
  BANNERTYPE_NULL       = 0; //无
  BANNERTYPE_HALL       = 1; //大厅
  BANNERTYPE_MALL_THREE = 2; //商城3级
  BANNERTYPE_FIRST_PAY  = 3; //首充
  BANNERTYPE_BAG        = 4; //背包
  BANNERTYPE_MAP        = 5; //图鉴
  BANNERTYPE_HALL_MODE  = 6; //大厅模型
  BANNERTYPE_MALL_ONE   = 7; //商城1级
  BANNERTYPE_MAX_NUM    = 8;
}

enum ACCOUNT_STATUS {
  ACCOUNT_STATUS_NORMAL          = 0; //正常
  ACCOUNT_STATUS_LOGOFF          = 1; //已注销
  ACCOUNT_STATUS_LOGOFF_PROGRESS = 2; //正在注销
}

//AB测试类型
enum ABTESTTYPE {
  AB_NULL          = 0;
  AB_PASSPORT      = 1;//通行证分组
  AB_NEWGUIDE      = 2;//新手引导分组
  AB_ADVERTISE     = 3;//广告分组
  AB_NEWPLAYER     = 4;//新手活动&任务
  AB_PERSONAL_MALL = 5;//精细化投放
}

//标签底图
enum LABELTYPE {
  LABELTYPE_NULL        = 0;
  LABELTYPE_LINKAGE     = 1; //联动
  LABELTYPE_COMMUNITY   = 2; //社区
  LABELTYPE_COMPETITION = 3; //赛事
  LABELTYPE_ACTIVITY    = 4; //活动
  LABELTYPE_LIVE        = 5; //直播
  LABELTYPE_UPDATE      = 6; //更新
  LABELTYPE_REPAIR      = 7; //修复
  LABELTYPE_PUNISHMENT  = 8; //处罚
}

//邀约类型
enum INVITETYPE {
  INVITE_NULL    = 0;
  INVITE_TEAM    = 1; //组队邀约
  INVITE_OBSERVE = 2; //观战邀约
  INVITE_GUILD   = 3; //公会邀约
}

//赛事状态
enum TOURNAMENTSTATUS {
  TOURNAMENT_STATUS_NULL       = 0; //
  TOURNAMENT_STATUS_WILL_BEGIN = 1; //赛事将要开始还未开始
  TOURNAMENT_STATUS_BEGINNING  = 2; //赛事开始但是还未报名
  TOURNAMENT_STATUS_ENROLLING  = 3; //赛事正在报名
  TOURNAMENT_STATUS_ENROLL_END = 4; //已经结束报名
  TOURNAMENT_STATUS_END        = 5; //赛事结束
  TOURNAMENT_STATUS_CANCEL     = 6; //赛事取消
}

enum PASSPORTREFRESH {
  PASSPORTREFRESH_NONE = 0;
  PASSPORTREFRESH_DAY  = 1;
  PASSPORTREFRESH_WEEK = 2;
}

// 赏金房间设置
message BountySetting {
  int32 CurrencyId  = 1; // 货币类型
  int32 CurrencyMin = 2; // 赏金区间(最小值)
  int32 CurrencyMax = 3; // 赏金区间(最大值)
}

// 队伍设置
message TeamOPSetting {
  string          pwd             = 1;
  bool            pwdOpen         = 2;
  bool            visible         = 3;
  int32           inviteAuthority = 4;
  TEAMTYPE        teamType        = 5;
  string          name            = 6;
  uint32          subMode         = 7;
  repeated bool   lockGroups      = 8;  // 最大三个(对应选手，观众 裁判)
  int32           customGameId    = 9;  // 用户自定义玩法id
  WorkshopSetting Workshop        = 10;
  BountySetting   Bounty          = 11; // 是否有赏金
  string          channelUsrId    = 12; // 客户端用来过滤
  PveSetting      PveSetting      = 13; //pve专用得
}

// 创意工坊房间设置
message WorkshopSetting {
  int32  MapId        = 1; // 地图id
  int32  SubMapId     = 2; // 子模式id
  string MapName      = 3; // 地图名称
  bool   joinAISwitch = 4; // true 可添加 false 不可加
}

// 换组(被队长)
message TeamOPChangeGroup {
  string pid     = 1;         // 玩家
  int32  groupId = 2;         // 组id
  int32  slot    = 3;         // 广播的时候需要带着这个slot(只有选手席有效)
}

// 换组(自己换组)
message TeamOPSelfChangeGroup {
  int32 groupId = 1;         // 组id
  int32 slot    = 2;         // 格子
}

// 委任房主
message TeamOPAppointLeader {
  string pid = 1;   // 玩家
}

// 更改队名
message TeamOPChangeName {
  string name = 1;   // 队伍名
}

// 交换(换席位)
message TeamOPSwitchSlot {
  int32  groupOne  = 1; // 组1
  int32  groupTwo  = 2; // 组2
  string playerOne = 3; // 玩家id
  string playerTwo = 4; // 玩家id
  int32  slotOne   = 5; // 位置1(如果playerOne 为空，该字段有效 无效值为-1)
  int32  slotTwo   = 6; // 位置2(如果playerTwo 为空，该字段有效 无效值为-1)
}

// 更改队名
message TeamBetOnBounty {
  int32 Num = 1; // 投注金额
}

// 队伍操作
message TeamOP {
  string                PID             = 1; // 操作者ID
  TEAMOP                type            = 2; // 操作类型
  TeamOPSetting         setting         = 3;
  TeamOPChangeGroup     changeGroup     = 4;
  TeamOPAppointLeader   appointLeader   = 5;
  TeamOPSelfChangeGroup selfChangeGroup = 6; // 这里包含了选手席换位置 以及 不同组之间互换
  TeamOPChangeName      changeName      = 7; // 更改名字
  TeamOPSwitchSlot      switchSlot      = 8; // 互换槽位
  TeamBetOnBounty       betOnBounty     = 9; // 投注(赏金)
}

message TeamBaseInfo {
  string          Name                = 1;
  uint64          TeamId              = 2;
  PVPMODE         Mode                = 3;
  int32           CompetotperNum      = 4;
  int32           CompetotperTotalNum = 5;
  bool            HasPwd              = 6;
  int32           SubMode             = 7;
  WorkshopSetting WSSetting           = 8;
  BountySetting   Bounty              = 9;
  int32           BountyTotal         = 10;
  string          channelUsrId        = 11;
}

/*
Para参数说明：
    Para[0]-到期时间。
    和Consume保持一致，把InstanceId从Para中提出来
*/
message Award {
  uint32                 Id          = 1;  //奖励物品ID
  uint32                 Count       = 2;  //奖励物品数量
  repeated int64         Para        = 3;  //辅助参数
  string                 InstanceId  = 4;  //实例ID
  uint32                 Weight      = 5;  //权重
  uint32                 Price       = 6;  //单价
  uint32                 SourceIdx   = 7;  //来源的索引
  int64                  SurviveTime = 8;  //
  CSDTItemMedal          Medal       = 9;  //勋章
  string                 Number      = 10; //物品编号
  string                 Abrasion    = 11; //磨损度
  map<string, ItemAffix> Affixs      = 12; //物品词缀
  bool                   Identified  = 13; //是否鉴定
  uint32                 TextureId   = 14; //贴图id
}


//更新玩家数据
message UpdatePlayerData {
  string                         UserName      = 1; //玩家名字更新
  repeated uint32                PassportType  = 2; //通行证类型
  CSDTChessPlrInfo               ChessPlayer   = 4; //棋手和棋手的装备(包括棋手模型)
  uint32                         SceneId       = 5; //棋盘
  map<uint32, ChessSkinSlotData> ChessSkinData = 6; //棋子皮肤
  uint32                         HeadPic       = 7; //头像
  map<uint32, uint32>            ShowItems     = 8; //装扮
  CSDTCommonRandList             EmotionList   = 9; //表情
  PveExData                      Pve           = 10; // PVE
  map<uint32, CSDTItem>          SkinData      = 11; // 棋手模型 + 棋盘皮肤
  CardGroupData                  CardGroupData = 12; // 卡组信息
}

message SkipType {
  string Skip = 1; //内链类型
  string Tap  = 2; //内链界面
}

//观战禁止类型
enum OBSERVEPRIVILEGE {
  OBSERVE_ALL           = 0;  //允许所有人观战
  OBSERVE_NONE          = 1;  //禁止所有人观战
  OBSERVE_MUTUAL_FOLLOW = 2;  //允许互关好友观战
}

enum NoticeSkip {
  UINull                     = 0;
  UIHallBag_34               = 1;
  UIHallBag_35               = 2;
  //    UIHallFriend_8          = 3;
  //    UIHallFriend_9          = 4;
  //    UIHallFriend_10         = 5;
  //    UIHallFriend_11         = 6;
  //    UIHallFriend_29         = 7;
  //    UIHallScene_0           = 8;
  //    UIHallChessPlayer_0     = 9;

  UIHallMainPlayer_0         = 10;
  UIEmail_0                  = 11;
  UIHallBattlePassport_51    = 12;
  UIHallBattlePassport_52    = 13;
  UIHallBattlePassport_53    = 14;
  UIHallBattlePassport_54    = 15;
  //    UIHallShop_0             = 16;
  //    UIHalShop_28            = 17;
  UIHallPicBook_3            = 17;
  UIHallPicBook_4            = 18;
  UIHallPicBook_5            = 19;
  UIHallPicBook_6            = 20;
  UIHallPicBook_18           = 21;

  //    UIHallShare_65           = 22;
  //    UIHallShare_66           = 23;
  //    UIHallShare_67           = 24;
  //    UIHallShare_68           = 25;
  //    UIHallShare_69           = 26;
  //    UIHallShare_70           = 27;
  //    UIHallShare_71           = 28;
  //    UIHallShare_72           = 29;
  //    UIHallShare_73           = 30;
  //    UIHallShare_74           = 31;
  //    UIHallShare_75           = 32;

  UIHallActivityFollow_0     = 33;
  UIHallModeSelect_0         = 34;
  UIHallModeSelect_1         = 35;
  UIHallModeSelect_2         = 36;
  UIHallModeSelect_3         = 37;

  //    UIHallActivities_22     = 38;
  //    UIHallActivities_23     = 39;
  //    UIHallActivities_41     = 40;
  //    UIHallActivities_44     = 41;
  //    UIHallActivities_45     = 42;
  //    UIHallActivities_46     = 43;
  //    UIHallActivities_49     = 44;
  //    UIHallActivities_50     = 45;
  //    UIHallActivities_56     = 46;
  //    UIHallActivities_57     = 47;
  //    UIHallActivities_58     = 48;
  UIHallCharge_0             = 49;
  UIHallSeason_0             = 50;
  //    UIHallMall_37           = 51;
  //    UIHallMall_38           = 52;
  //    UIHallMall_39           = 53;
  //    UIHallMall_47           = 54;
  UIHallSpectator_76         = 55;
  UIHallSpectator_77         = 56;
  UIHallPicBook_88           = 67;
  UIHallActivity_22          = 68;

  //    UIHallActivity_23       = 69;

  UIHallActivity_41          = 70;
  UIHallActivity_48          = 71;
  UIHallActivity_50          = 72;
  UIHallActivity_56          = 73;
  UIHallActivity_57          = 74;
  UIHallActivity_58          = 75;
  UIHallActivity_78          = 76;
  UIHallActivity_82          = 77;
  //    UIHallActivity_83       = 78;

  UIHallActivity_85          = 79;
  UIHallSelectMode_0         = 80;
  UIHallActivity_83          = 81;
  UIHallMall_0               = 82;
  UIHallBag_99               = 83;
  UIHallBag_100              = 84;
  UIHallBag_101              = 85;
  UIHallBag_102              = 86;

  UIHallActivity_44          = 87;
  UIHallActivity_45          = 88;
  UIHallActivity_46          = 89;
  UIHallActivity_49          = 90;
  UIHallActivity_81          = 91;

  UIShareCommon_65           = 92;
  UIShareCommon_66           = 93;
  UIShareCommon_67           = 94;
  UIShareCommon_68           = 95;
  UIShareCommon_69           = 96;
  UIShareCommon_70           = 97;
  UIShareCommon_71           = 98;
  UIShareCommon_72           = 99;
  UIShareCommon_73           = 100;
  UIShareCommon_74           = 101;
  UIShareCommon_75           = 102;

  UIHallWorkshop_0           = 103;

  UIHallPicBook_141          = 104;
  UIHallPicBook_142          = 105;
  UIHallPicBook_143          = 106;
  UIHallPicBook_144          = 107;
  UIHallPicBook_145          = 108;

  UIHallGuildJoin_158        = 109;
  UIHallGuildJoin_159        = 110;

  UIHallGuildCreateDetails_0 = 111;

  UIHallGuildMembers_160     = 112;
  UIHallGuildMembers_161     = 113;
  UIHallGuildMembers_162     = 114;

  UIHallActivity_175         = 115;
  UIHallActivity_140         = 116;

  UIHallActNotice            = 117;
}

// 视频类型
enum VIDEO_TYPE {
  Teaching = 0;    // 教学视频
  Genre    = 1;    // 阵容视频
  MaxType  = 2;    // 类型最大值
}

// 视频信息操作
enum VIDEO_OPERATE {
  Add    = 0; // 添加
  Modify = 1; // 修改
  Remove = 2; // 删除
}

// 队伍解散原因
enum TEAM_DISMISS_REASON {
  JOIN_TIMEOUT         = 0; // 进入房间超时了
  ENTER_PVP            = 1; // 进入PVP
  ENTER_PVP_TIMEOUT    = 2; // 有玩家离开了队伍
  TOURNAMENT_ROUND_END = 3; // 锦标赛轮次结束
  TEAM_INACTIVE        = 4; // 队伍不活跃
}

// 商场商品标签
enum MALL_GOODS_FLAG {
  MGF_NULL            = 0;
  SALE                = 1; //打折
  PURCHASE_LIMITATION = 2; //限购
  NEW                 = 3; //新品
  TIME_LIMIT          = 4; //限时
  HOT                 = 5; //热卖
  THEME               = 6; //主题
}

message BuffEffect {
  uint32 Type  = 1;
  uint32 Value = 2;
}

/*
Para参数说明：
    Para[0]-折扣价格。
    为了不和折扣价格混用，把InstanceId从Para中提出来
*/
message Consume{
  uint32         Id         = 1;  //消耗物品ID
  uint32         Count      = 2;  //消耗物品数量
  repeated int64 Para       = 3;  //辅助参数
  string         InstanceId = 4;  //实例ID
}

message CSDTItem{
  uint32                 Id          = 1;
  uint32                 Count       = 2;
  string                 InstanceId  = 3;
  repeated int64         Para        = 4;
  int64                  SurviveTime = 5;
  CSDTItemMedal          Medal       = 6;
  int64                  CreateTime  = 7;
  int64                  GetTime     = 8;
  string                 Number      = 9;
  string                 Abrasion    = 10; //磨损度
  map<string, ItemAffix> Affixs      = 11; //物品词缀
  bool                   Identified  = 12; //是否已鉴定
  uint32                 TextureId   = 13; //贴图id
}


//物品词缀
message ItemAffix {
  uint32   Id             = 1;
  float    Value          = 2;
  // 词缀来源于棋手合棋盘是， itemId 对应物品id, 词缀来源为棋子皮肤时，ItemId 对应 棋子id
  uint32   SourceItemId   = 3; // 来源物品id, 词缀封存道具会用到该属性
  ITEMTYPE SourceItemType = 4; // 来源物品type, 词缀封存道具会用到该属性
}

//
message CSDTItemMedal {
  int64  CreateTime = 1; // 获取时间
  int64  Score      = 2; // 积分
  string Number     = 3; // 编号
  int64  SeasonId   = 4; // 勋章赛季
}

message CSDTItemID {
  uint32 Id         = 1;
  string InstanceId = 2;
  bool   IsMedal    = 3;
  uint32 Count      = 4;
  string Abrasion   = 5;  //磨损度
}

message CSDTBagPara {
  SOURCE Source       = 1;
  uint32 SubSource    = 2;
  bool   TriggerEvent = 3;
  bool   NewGet       = 4;
  string OrderId      = 5;
  int64  AddTime      = 6;
}

message CSDTBagItem{
  CSDTItem    Item = 1;
  CSDTBagPara Para = 2;
}

message CSDTPlayerStatusInfo {
  string          Id                    = 1;  // id
  PLAYERSTATUS    PlayerStatus          = 2;  // 玩家状态
  uint32          MapId                 = 3;  // 正在进行的pvp mapId
  string          ApkVersion            = 4;  // 版本号
  PLATFORMTYPE    PlatFormType          = 5;  // 登录设备
  uint32          HallServerId          = 6;  // 玩家所处的hallserver的id
  FRIENDINVISIBLE FriendInvisible       = 7;  // 好友不可见
  uint64          ObservePvpId          = 8;  // 观战战斗ID
  PVPMODE         ObservePvpMod         = 20; // 观战模式
  bool            ChangeFriendInvisible = 9;  // 只改好友可见
  uint32          MapPlaying            = 10; // 游玩中的地图
  bool            ChangePsOnly          = 11; // 修改psonly标记


  bool            PsOnly                = 12; //  psonly
  string          ServiceVersion        = 13; // 服务器版本号
  LOGINSOURCE     LoginSource           = 14; //登录来源
}

message CSDTPvpWinData {
  WINTYPE WinType   = 1;   //最近胜利类型
  uint32  ResultCnt = 2;   //最近战斗连续结果数
}

message CSDTChessPlrInfo {
  uint32              Id     = 1;
  map<uint32, uint32> Equips = 2;
}

message CSDTPuzzle{
  repeated uint32    OpenMap    = 1; //翻开的图块 [翻开得图块id]
  repeated uint32    GroupAward = 2;//获取的组奖励 [组奖励id]
  map<uint32, int32> ItemMap    = 3; //周期内获取得<道具id:数量>
  repeated uint32    AwardPool  = 4; //奖池已获得奖励id
}

message ChessSkinSlotData {
  map<string, CSDTItem> Slots = 1;
}

enum EXCHANGESTATE{
  EXCHANGEMARK_NOT    = 0;
  EXCHANGEMARK_NORMAL = 1;
}

message PvpPlayerData {
  string                         Id                        = 1;    //id
  string                         UsrName                   = 2;    //玩家用户名
  uint32                         Index                     = 3;    //玩家索引
  uint32                         Camp                      = 4;    //阵营
  bool                           IsRobot                   = 5;    //是否机器人
  uint32                         CompetitionCnt            = 6;    //累计场次
  uint32                         HeadPic                   = 7;    //头像
  uint32                         TeamPlayerNum             = 8;   //所在队伍人数
  uint32                         MMR                       = 9;   //MMR
  uint32                         Lvl                       = 10;   //等级
  int64                          ReqTime                   = 11;   //申请pvp时间
  PLATFORMTYPE                   PlatformType              = 12;   //平台类型
  uint32                         TeamId                    = 13;   //队伍Id
  uint32                         Cup                       = 14;   //杯段
  string                         ApkVersion                = 15;
  string                         PvpResourceVersion        = 16;
  uint32                         Asyn                      = 17;
  uint32                         ChessPlayerSkin           = 18;   //棋手皮肤ID
  uint32                         SceneSkin                 = 19;   //场景皮肤
  string                         DeviceType                = 20;   //手机牌子
  uint32                         DamageEffect              = 21;   //伤害特效
  map<uint32, CSDTPvpWinData>    ModeWinDatas              = 22;
  uint32                         CurRankSeason             = 24;
  uint32                         MeleeRule                 = 25;
  map<uint32, uint32>            CurShowItems              = 26;   //{itemtype:itemid}
  CSDTCommonRandList             EmotionList               = 28;   //配置的表情列表
  string                         ChannelUsrId              = 30;   //渠道用户id.openid
  CHANELTYPE                     ChannelType               = 31;   //渠道类型
  map<uint32, uint32>            Settings                  = 32;   //设置
  int32                          AssistantId               = 33;   //AI局辅助ID
  uint32                         CreditScore               = 34;   //信用分
  uint32                         TMMR                      = 35;   //TMMR
  uint32                         TCup                      = 36;   //杯段
  string                         TeamVoiceId               = 37;   //队伍语音房间ID
  uint32                         TeamVoiceMemId            = 38;   //队伍语音房间成员ID
  string                         PicUrl                    = 39;   //tx 头像URL
  uint32                         TeamBattleCount           = 40;   //开黑总局数
  uint32                         TeamBattleMvpCount        = 41;   //开黑总赢局数
  uint32                         RecommendScore            = 42;   //推荐分
  uint32                         WxVVipLevel               = 43;   //微信大玩家等级
  int32                          TeamBattleAvgRank         = 44;   //开黑平均排名
  string                         CupNameChina              = 45;   //杯段中文(专为tx IDIP接口准备)
  string                         Language                  = 46;   //语言
  string                         Country                   = 47;   //国家
  string                         CupIconUrl                = 48;   //杯段icon(专为tx IDIP接口准备)
  int32                          PersonalAvgMvp            = 49;   //个人吃鸡率

  map<string, SwitchItem>        SwitchItems               = 50;   //封禁信息
  OBSERVEPRIVILEGE               ObservePrivilege          = 51;   //观战权限
  map<uint32, int64>             Punishment                = 52;   //惩罚信息 {PUNISHMENTTYPE:MaxExecuteDeadline}
  uint32                         Slot                      = 53;   //队伍中的位置

  CSDTChessPlrInfo               CurChessPlr               = 55; //当前使用棋手信息
  TEAMGROUP                      TeamGroup                 = 56;
  string                         PvpServerGroup            = 57; //战斗服分组ID
  uint32                         Ping                      = 58; //玩家与战斗服的延迟
  uint32                         Province                  = 59; //玩家所属省
  string                         TeamVoiceUserId           = 60; //龙渊队伍语音房间成员ID
  map<string, uint32>            RegionDelays              = 61; //区域延迟
  KrAddictionInfo                Addiction                 = 62; //沉迷信息
  string                         Region                    = 63; //玩家登录服所在区域
  uint32                         FirstMatchSuccessWaitTime = 64; //第一次匹配成功等待时间
  string                         PackageName               = 65; //客户端的包名 判断是否是vng
  uint64                         TournamentID              = 66; //玩家赛事id
  uint64                         TournamClass              = 67; //赛事级别
  uint64                         TournamClassRound         = 68; //赛事进行轮次
  uint64                         TournamChessID            = 69; //轮次对局id
  repeated uint32                PassportTypeIds           = 70; //通行证类型IDList
  map<uint32, uint32>            Tickets                   = 71; //工坊门票 <ticketType, ticketNum>
  string                         SdkCountry                = 72; //SDK国家通过IP获取的
  bool                           Ps4Only                   = 73; //玩家自己的ps4only标记
  UserRestrictType               RestrictType              = 74;
  map<int32, int32>              Currencys                 = 75; //玩家货币
  string                         GuildName                 = 76; //公会ID 聊天展示
  int32                          GuildSign                 = 77; //公会标志
  repeated string                PSBlockedUsers            = 78; // playstation 用户的黑名单
  repeated KernelChessInfo       ChessList                 = 79; //玩家带入卡组
  string                         ChannelID                 = 80;
  repeated uint32                SkinSuitID                = 81; //皮肤套装ID
  uint32                         FFMMR                     = 82; //4v4mmr
  uint32                         FFCup                     = 83; //4v4段位
  uint32                         BattleTime                = 84; //战斗总时长(抛开准备时间)
  map<uint32, ChessSkinSlotData> ChessSkinData             = 85; //当前配置的棋手皮肤 @update.beta28
  map<uint32, CSDTItem>          SkinData                  = 86; //当前配置的装扮 @update.beta28 <itemtype, item>
  PvpData                        PvpData                   = 87; //玩家额外得pvp数据：如卡组、pve 等数据
  uint32                         PvpVoiceMemId             = 88;//pvp语音成员id
  uint32                         CampVoiceMemId            = 89;//阵营语音成员id
  uint32                         ChoseCardGroup            = 90; //选择的卡组id
  string                         MentorId                  = 91; //选择的卡组id
  EXCHANGESTATE                  ExchangeState             = 92; //交易状态
}

message PvpData {
  PveDataInfo      Pve          = 1;
  CardGroupData    CardGroup    = 2;
  TowerDefenseData TowerDefense = 3;
}

message TDCardGroup {
  repeated int32 Ids = 1; // (tag.bson)="ids"
}

message TDCardGroups {
  TDCardGroup ChessBoard  = 1;
  TDCardGroup ChessPlayer = 2;
  TDCardGroup ChessMan    = 3;
}

message TDItemGroup{
  TDCardGroups       CardGroups = 1;  //卡组
  map<int32, TDItem> Items      = 2;  //卡组详细数据
}

message TowerDefenseData{
  TDItemGroup ItemGroup = 1; //塔防卡组数组
}

message KernelCardGroup {
  repeated uint32 ChessIds = 1;
}

// 内核棋子信息
message KernelChessInfo {
  int32 Id       = 1;    // 棋子id (tag.json)="id,omitempty"
  int32 Level    = 2;    // 稀有度 (tag.json)="level,omitempty"
  int32 Quantity = 3;    // 数量  (tag.json)="quantity,omitempty"
}

// 工坊地图进入成功，开始应用地图规则（当前仅有扣除门票）
message ApplyWorkshopRule {
  BattleExtData ExtData = 1;
}

// 游玩记录
message CSDTVisitedMap {
  int64  TimeStamp = 1;
  uint32 MapID     = 2;
  uint32 SubMapID  = 3;
  bool   IsPlaying = 4;
}

message VisitedMaps {
  string                      PlayerID = 1;
  map<uint32, CSDTVisitedMap> Maps     = 2;
}

message CSDTCurShowItem {
  uint32 Id         = 1;
  string InstanceId = 2;
}

message CSDTPassportHistory {
  PASSPORTTYPE Type   = 1;
  uint32       Season = 2;
  uint32       Level  = 3;
}

message ExchangeRecord {
  bool  Init         = 1;    //(tag.json)="init"(tag.bson)="init"
  int32 BalanceCount = 2;  //(tag.json)="balanceCount"(tag.bson)="bc"	//成交数量
  int32 SaleCount    = 3;  //(tag.json)="saleCount"(tag.bson)="sc"		//上架数量
}

message CSDTPlayerBaseInfo {
  string                        Id                       = 1;  //玩家id
  string                        UsrName                  = 2;  //用户名
  uint32                        HeadPic                  = 3;
  uint32                        ChatBubble               = 4;  //聊天气泡
  uint32                        MMR                      = 5;
  uint32                        Level                    = 6;
  uint32                        Exp                      = 7;
  uint32                        CurRankSeason            = 8;
  HISTORYPVPSHOWPERMISSION      HistoryPvpShowPermission = 9;  //查看历史战绩权限
  map<uint64, string>           PvpHistory               = 10; //pvp历史记录
  uint32                        HeadPicFrame             = 11; //头像框
  uint32                        HeadPicPendant           = 12; //头像挂件
  uint32                        Scene                    = 13; //场景ID
  string                        ChannelUsrId             = 14; //渠道Id
  repeated SWITCHTYPE           SwitchPlayerSet          = 15; //开关控制标记设置_个人
  CHANNELVIPTYPE                ChannelVipType           = 16; //渠道vip類型
  LAUNCHTYPE                    LaunchType               = 17; //启动类型
  PLATFORMTYPE                  PlatFormType             = 18; //登录设备类型
  uint32                        TMMR                     = 19;
  uint32                        PassportLevel            = 20; //通行证等级
  uint32                        Star                     = 21; //战星
  string                        Country                  = 22; //国家
  int64                         LastLoginTime            = 23; //上次登录时间
  string                        NativeCountry            = 24; //祖籍国家
  CHANELTYPE                    ChannelType              = 25; //渠道类型
  int64                         ResetHeadPicTime         = 26; //idip重置玩家头像时间
  repeated CSDTPunishment       Punishment               = 27; //惩罚信息
  uint32                        Period                   = 28; //通行证的赛季
  uint32                        Province                 = 29; //玩家所属省
  uint32                        MvpCount                 = 30; //玩家吃鸡次数 冗余 CSDTRankSeasonData.MvpCount
  repeated uint32               PassportTypeIds          = 31; //通行证类型IDList
  map<uint32, uint32>           MvpInfos                 = 32; //模式的mvp数据
  uint64                        ObservePvpId             = 33;
  bool                          Ps4Only                  = 34;
  UserRestrictType              RestrictType             = 35;
  PlayerGuildInfo               GuildInfo                = 36;
  CSDTItem                      medal                    = 37; // 用户勋章信息
  string                        OriRegion                = 38; // 用户初始区域
  uint32                        FFMMR                    = 39; // 4V4 MMR
  map<string, CSDTPassportCard> AdvancePassport          = 43; //预购通行证 客户端自己 计算还剩多少次数
  map<string, uint32>           PassportCardNum          = 44; //通行证卡号
  CSDTPlayerPvpData             PvpData                  = 45; //玩家的卡组信息和 pve信息
  PlayerMentorShipInfo          MentorShipInfo           = 46; //玩家 师徒信息
  int64                         TotalDuration            = 47; //新的总时长
  CSDTMentorInfo                MentorInfo               = 48; //师傅信息

  EXCHANGESTATE                 ExchangeState            = 49; //拍卖行状态
  repeated CSDTPassportHistory  PassportHistory          = 50; //通行证历史数据
  ExchangeRecord                ExchangeRecord           = 51; //交易信息
}

// 供其他玩家查看
message PlayerGuildInfo {
  string        ID   = 1;
  string        Name = 2;
  int32         Sign = 3;
  GUILDROLETYPE Role = 4;
}

//玩家的简单信息(用于玩家头像/昵称等展示,不用CSDTPlayerBaseInfo[太重了])
message CSDTPlayerSimpleInfo {
  string                       Id              = 1;  //玩家id
  string                       UsrName         = 2;  //用户名
  uint32                       HeadPic         = 3;
  uint32                       HeadPicFrame    = 4; //头像框
  uint32                       HeadPicPendant  = 5; //头像挂件
  uint32                       ChatBubble      = 6;  //聊天气泡
  uint32                       MMR             = 7;
  uint32                       TMMR            = 8;
  uint32                       Cup             = 9;
  uint32                       Level           = 10;
  string                       Country         = 11; //国家
  uint32                       Province        = 12; //玩家所属省
  PLATFORMTYPE                 PlatFormType    = 13; //登录设备类型
  uint32                       Period          = 14; //通行证的赛季
  repeated uint32              PassportTypeIds = 15; //通行证类型IDList
  uint64                       ObservePvpId    = 16; //邀约信息
  bool                         PS4Only         = 19; // ps4 only 标志
  CHANELTYPE                   ChannelType     = 20; //
  string                       ChannelUsrId    = 21; //
  PlayerGuildInfo              GuildInfo       = 22;
  UserRestrictType             RestrictType    = 23; // 用户限制类型
  EXCHANGESTATE                ExchangeState   = 24; //拍卖行状态
  map<int32, HistoryMaxCupMmr> HisToryMaxStat  = 25; //历史最高段位 分模式
}

// 开放平台排行榜信息
message CSDTPlayerRankInfo {
  string Id           = 1;  //玩家id
  string UsrName      = 2;  //用户名
  uint32 HeadPic      = 3;
  uint32 HeadPicFrame = 4; //头像框
  string Country      = 5; // 国家
  uint32 Cup          = 6; // 段位
}

// 玩家锦标赛积分
message CSDTPlayerTournamentInfo {
  string Id    = 1;  //玩家id
  uint32 Score = 2;  //积分
}

message CSDTPvpHistory {
  uint64         PvpId              = 1;
  int32          ChangeMmr          = 2; //该次pvp结算的mmr
  bool           DailyFirstWin      = 3;    //是否首胜
  repeated Award DailyFirstWinAward = 4;    //首胜奖励
}

message CSDTPlayerPvpInfo {
  repeated CSDTPvpHistory PvpHistory = 1;  //pvp历史记录
}

message CSDTPlayerDetailInfo{
  CSDTPlayerBaseInfo BaseInfo = 1;    //玩家基础信息
  CSDTStat           Stat     = 2;    //玩家统计信息
  repeated CSDTItem  Items    = 3;    //玩家物品信息(部分用到的)
}

// 玩家物品信息
message CSDTPlayerItems{
  bool              Cache  = 1; // 是否为缓存
  repeated CSDTItem Medals = 2; // 玩家基础信息
}

message CSDTRankSeasonData{
  uint32 CompetitionCnt  = 1;
  uint32 AvgRank         = 2;
  uint32 MvpCount        = 3;
  uint32 MvpProbability  = 4;
  uint32 Top3Count       = 5;
  uint32 Top3Probability = 6;
  uint32 AvgRound        = 7;
  uint32 WinTimes        = 8; // 胜利次数
}

message CSDTRankSeasonInfo{
  uint32                          Id            = 1;
  uint32                          MaxMMR        = 2;
  map<uint32, CSDTRankSeasonData> Modes         = 3;
  uint32                          MaxTMMR       = 4;
  uint32                          MaxFFMMR      = 5; //赛季4v4最大mmr值
  int32                           MaxQueenRank  = 6; //单人排位最高皇后排名
  int32                           MaxTQueenRank = 7; //双人排位最高皇后排名
  int32                           MaxFQueenRank = 8; //四人排位最高皇后排名
}

message CSDTStat {
  uint32                          MMR                 = 1;//MMR
  uint32                          CompetitionCnt      = 2;
  uint32                          MvpCnt              = 3;
  int64                           RegisterTime        = 4;
  uint32                          ChessPlayerSkin     = 5;//棋手皮肤
  uint32                          FollowCount         = 6;
  uint32                          FansCount           = 7;
  map<uint32, CSDTRankSeasonInfo> SeasonInfo          = 8;//赛季信息
  CSDTRankSeasonData              UnSeasonData        = 9;
  uint32                          CompetitionCntDaily = 10; //每日对局数
  uint32                          BindOldPlayerCount  = 11; // 绑定老账号次数
  uint32                          TMMR                = 12;//TMMR
  CSDTChessPlayer                 CurChessPlr         = 13; //当前棋手信息
  uint32                          Cup                 = 14; // 段位
  uint32                          FFMMR               = 15; // 4v4 mmr
  int32                           MaxQueenRank        = 16; //单人排位最高皇后排名
  int32                           MaxTQueenRank       = 17; //双人排位最高皇后排名
  int32                           MaxFQueenRank       = 18; //四人排位最高皇后排名
}

message CSDTNumRankItem {
  string Id      = 1;    //玩家id
  uint32 Number  = 4;    //值
  int32  Rank    = 5;    //排名
  string Captain = 6;   // 队长id 仅当custom type中会返回
  int64  Score   = 7;
}

enum WORDCHAT {
  TYPE_COMMON = 0;  // 普通世界聊天
  TYPE_STEAM  = 1;  // 创意工坊世界聊天
}

message CSDTWorldChat {
  CSDTPlayerSimpleInfo BaseInfo        = 1;
  string               Content         = 2;
  uint32               EmotionId       = 3;    //表情ID
  bool                 NeedLocalize    = 4;    //是否需要本地化
  int64                Timestamp       = 5;    //消息发送时间戳
  WORDCHAT             WorldChatType   = 6;    //普通世界聊天 0, 创意工坊 1
  string               WorkshopMapName = 7;
  WorkshopSetting      WSSetting       = 8; // todo: 手游接入这个新字段后，删掉WorkshopMapName
  CHATSOURCETYPE       SourceType      = 9; //聊天来源类型
  string               ChannelID       = 10;   //频道ID
  CSDTItemMedal        MedalInfo       = 11; //皇后勋章详细信息
}

enum BuffEffectType {
  BuffEffectType_None          = 0;
  BuffEffectType_Exp           = 1;
  BuffEffectType_Money         = 2;
  BuffEffectType_Mall          = 3;  //商城活动buff效果
  BuffEffectType_RankProtect   = 4;  //开黑buff,段位保护
  BuffEffectType_Passport      = 5;  //通行证积分加成
  BuffEffectType_NewPlayer_Exp = 6;  //新手经验加成
  BuffEffectType_Ms            = 7;  //师徒加成
}

message CSDTBuffAct{
  uint32         GroupId       = 1;    //活动组ID
  uint32         ActId         = 2;    //活动ID
  BUFFACTSTATUS  ActStatus     = 3;    //活动状态
  uint32         ShowTime      = 4;    //开始显示的时间
  uint32         EndShowTime   = 5;    //结束显示的时间
  uint32         StartTime     = 6;    //开始的时间
  uint32         EndTime       = 7;    //结束的时间
  uint32         BuffStartTime = 8;    //buff开始时间
  uint32         BuffEndTime   = 9;    //buff结束时间
  ACTIVITYTYPE   ActType       = 10;   //添加活动类型
  BuffEffectType BuffType      = 11;   //buff类型
  uint32         BuffStartLv   = 12;   //buff生效等级
  uint32         BuffEndLv     = 13;   //buff结束等级
}

message CSDTMail{
  uint64              Id           = 1;
  string              Title        = 2;  //标题
  string              Content      = 3;  //正文
  repeated Award      Awards       = 4;  //奖励
  int64               Ts           = 5;  //邮件发送时间
  bool                IsRead       = 6;  //是否已读
  bool                IsGetAward   = 7;  //是否领取奖励
  uint32              Flag         = 8;  //0代表明文，1代表语言key
  SOURCE              AwardSource  = 9;
  map<string, string> Dict         = 10;
  MailExtData         ExtData      = 11;
  int64               EndTime      = 12; //结束时间
  WEBOP               WebOp        = 30; //开放平台操作类型
  string              WebOpenData  = 31; //开放平台前端可见数据
  int64               MustWaitTime = 32; //必须等待一段时间才能领取奖励
}

//公告相关---------begin------
message CSDTNoticeInfo {
  repeated CSDTNotice Data = 1;    //公告
}

message CSDTNotice {
  int64                   Id              = 1;    //公告id
  string                  Title           = 2;    //标题
  string                  Content         = 3;    //内容
  string                  Label           = 4;    //标签
  LABELTYPE               LabelType       = 5;    //标签类型
  int64                   Ts              = 6;    //时间戳
  NOTICESHOWTYPE          ShowType        = 7;    //公告展示方式
  NOTICECONTENTTYPE       ContentType     = 8;    //公告内容类型
  string                  PicUrl          = 9;    //图片CDN地址
  string                  SkipUrl         = 10;    //图片跳转地址
  uint32                  Flag            = 11;
  int64                   EndTime         = 12;    //结束时间
  NOTICETYPE              NoticeType      = 13;    //公告类型
  repeated string         CountryList     = 14;    //地区
  NOTICETAP               Tap             = 15;    //公告栏目
  string                  SkipInterface   = 16; //内链类型
  uint32                  SkipTab         = 17; //内链页面
  PICNOTICEJUMPTYPE       PicJumpType     = 18; //图片公告跳转类型
  repeated GMLanguageInfo WebContent      = 19; //web公告内容
  repeated string         DownloadList    = 20;  //下载渠道
  repeated PLATFORMTYPE   PlatformList    = 21; //平台类型
  MAGNETISMTYPE           MagnetismType   = 22; //磁块类型
  string                  CoverPicUrl     = 23; //封面图
  string                  Subtitle        = 24; //副标题
  uint32                  JumpGoodsId     = 25; //跳转的商品Id，配合SkipInterface使用
  repeated string         ApkVersionList  = 26; //版本
  string                  PCSkipUrl       = 27; //pc端图片跳转地址
  int64                   Sort            = 28; //排序
  bool                    NeedRedPoint    = 29; //是否需要展示小红点
  repeated string         ExcludeDownload = 30; //下载渠道除外
  int64                   StartTime       = 31; //开始时间
}
//--------------end------------

message CSDTAdsInfo {
  repeated CSDTAds Data = 1;    //广告
}

message CSDTAds {
  int64                 Id              = 1;    //广告id
  string                Title           = 2;    //标题
  string                Name            = 3;    //图片地址
  uint32                ShowLimit       = 4;    //浏览上限
  int64                 StartTime       = 5;    //生效时间
  int64                 EndTime         = 6;    //失效时间
  uint32                ShowCount       = 7;    //展示次数
  ADSPAYTYPE            IsPay           = 8;    //是否付费
  repeated string       CountryList     = 9;    //地区
  repeated string       WhiteList       = 10;   //白名单
  repeated string       DownloadList    = 11;  //下载渠道
  repeated PLATFORMTYPE PlatformList    = 12; //平台类型
  repeated string       ExcludeDownload = 13;  //下载渠道除外
}

message Contest {
  uint32          ChessId         = 1;
  uint32          X               = 2;
  uint32          Y               = 3;
  repeated uint32 Equip           = 4;
  uint32          ChessmanCardTag = 5;
  uint32          Race1           = 6; //种族1
  uint32          Race2           = 7; //种族2
  uint32          Pro1            = 8; //职业1
  uint32          Skill1          = 9; //pve 棋子选择的技能1
  uint32          Skill2          = 10; //pve 棋子选择的技能1
}

message Effect {
  uint32 Type     = 1;    //效果类型
  uint32 CurLevel = 2;    //当前层数
  uint32 MaxLevel = 3;    //最大层数
}

message ChessDamageStat {
  uint32 ChessId        = 1;
  uint32 TotalDamage    = 2;
  uint32 TotalSuffer    = 3;
  uint32 PhysicalDamage = 4;
  uint32 MagicalDamage  = 5;
}

message SelectEquip {
  uint32 RoundId = 1;
  uint32 EquipId = 2;
}

message Equip {
  uint32 Id      = 1; //装备id
  uint32 Count   = 2; //装备数量
  uint32 Quality = 3; //装备品质
}
message CSDTRoundItem {
  //战斗数据
  uint32                   Round                  = 1;    //第几回合
  uint32                   OldHp                  = 2;    //战斗前生命值
  uint32                   Hp                     = 3;    //战斗后生命值
  uint32                   OldRank                = 4;    //战斗前名次
  uint32                   Rank                   = 5;    //战斗后名次
  string                   TargetPlayerId         = 6;    //战斗对象
  WINTYPE                  WinType                = 7;    //战斗结果
  map<uint32, uint32>      EnemyLeftChess         = 8;    //敌方剩余棋子        {chessid:count}
  map<uint32, uint32>      SelfLeftChess          = 9;    //我方剩余棋子        {chessid:count}
  uint32                   Time                   = 10;   //战斗用时
  map<uint32, uint32>      DropEquip              = 11;   //掉落装备            {equipid:count}
  repeated Contest         SelfContest            = 12;   //我方战斗阵容
  repeated Contest         TargetContest          = 13;   //战斗对象阵容
  map<uint32, uint32>      SelfBattleChess        = 14;   //我方上阵棋子
  map<uint32, uint32>      EnemyBattleChess       = 15;   //敌方上阵棋子
  //回合数据
  repeated Contest         RoundStartContest      = 16;   //回合开始手牌阵容
  repeated Contest         BattleStartContest     = 17;   //战斗开始手牌阵容
  uint32                   ChessShopFreshCount    = 18;   //棋子商店刷新计数
  repeated uint32          ChessShopFreshList     = 19;   //棋子商店刷新列表
  map<uint32, uint32>      BuyChessList           = 20;   //购买棋子列表        {chessid:count}
  map<uint32, uint32>      EquipComposeList       = 21;   //装备合成           {equipid:count}
  map<uint32, uint32>      UpgradeStarChessList   = 22;   //棋子升星           {chessid:count}
  uint32                   RoundStartMoney        = 23;   //回合开始金币
  uint32                   BattleStartMoney       = 24;   //战斗开始金币
  uint32                   BattleEndMoney         = 25;   //战斗结束金币
  map<uint32, uint32>      MoneySourceList        = 26;   //金币收入
  map<uint32, uint32>      MoneyPayList           = 27;   //金币支出
  uint32                   ReadChessCount         = 28;   //研读棋谱次数
  uint32                   RoundStartLvl          = 29;   //回合开始等级
  uint32                   RoundStartExp          = 30;   //回合开始经验
  uint32                   BattleStartLvl         = 31;   //战斗开始等级
  uint32                   BattleStartExp         = 32;   //战斗开始经验
  map<uint32, uint32>      SellChessList          = 33;   //出售棋子           {chessid:count}
  bool                     IsMonster              = 34;   //是否是野怪回合
  uint32                   WinCon                 = 35;   //回合结束是第几连胜，例：0
  uint32                   LoseCon                = 36;   //回合结束是第几连败，例：3
  bool                     IsLastRound            = 37;   //当前回合是否是本玩家的最后回合
  repeated Contest         SharedChessList        = 38;   //共享棋子列表
  repeated uint32          GiveEquipChessList     = 39;   //给装备列表
  repeated Contest         GiveChessList          = 40;   //给棋子列表
  repeated Effect          RaceEffectList         = 41;   //种族效果列表
  repeated Effect          ProfessionEffectList   = 42;  //职业效果列表
  repeated ChessDamageStat ChessDamageList        = 43;   //棋子伤害列表
  repeated uint32          RoundEquipSelections   = 44;  //装备的选择
  repeated SelectEquip     SelectEquips           = 45;   //玩家选择装备的数据
  string                   TargetOpenId           = 46;   //玩家的openId

  map<uint32, Equip>       EquipComposeStructList = 47;   //装备合成            {equipid:equip} 为了不破坏原有装备合成数据结构,不然会导致平台那边修改


}

message CSDTRound{
  repeated CSDTRoundItem List = 1;
}

message CSDTRoundEnd {
  string        Id       = 1;
  CSDTRoundItem RounItem = 2;
}

message CSDTPvpStat {
  uint32                 DeathNum           = 1;  //总死亡数
  uint32                 KillNum            = 2;  //总击杀数
  uint32                 WaterDeathNum      = 3;  //水地形死亡次数
  uint32                 HurtGroundDeathNum = 4;  //普通伤害地形（地刺）死亡次数
  repeated CSDTRoleStat  WinRoleStat        = 5;  //赢方角色使用统计
  repeated CSDTRoleStat  FailRoleStat       = 6;  //输方角色使用统计
  repeated CSDTRoleStat  DrawRoleStat       = 7;  //平方角色使用统计
  uint32                 MvpRoleId          = 8;  //吃鸡英雄id
  repeated uint32        MvpSkills          = 9;  //吃鸡英雄技能
  map<string, CSDTRound> PlayerRound        = 10;
}

message CSDTPvpCampResult {
  repeated CSDTCampData Camp        = 1;    // 阵营数据统计
  uint32                Rank        = 2;  // 似乎没用
  uint32                Camp1Score  = 3;    // 阵营1分值
  uint32                Camp2Score  = 4;    // 阵营2分值
  int32                 CurrencyID  = 5;    // 货币ID
  int32                 CurrencyCnt = 6;    // 货币数量(带入战斗剩余值 + EarnedCurrency，算法问策划)
}

message CSDTCampData {
  uint32                     Camp       = 1;    //阵营
  uint32                     Rank       = 2;    //阵营排名
  WINTYPE                    WinType    = 3;    //胜利状态
  repeated CSDTPvpPlayerStat PlayerStat = 4;    //玩家统计
  bool                       Surrender  = 5;  //是否投降
}

message CSDTRoleStat {
  uint32          Id            = 1;    //角色id
  uint32          UseTime       = 2;    //使用总时长 单位：s
  uint32          KillCnt       = 3;    //击杀数
  uint32          AssistKillCnt = 4;    //助攻数
  uint32          DeathCnt      = 5;    //死亡数
  repeated uint32 Talents       = 6;    //天赋列表
}

message CSDTPvpMvp {
  uint32 HurtMax     = 1;    //伤害最高
  uint32 BearHurtMax = 2;    //承受伤害最大
}

message CSDTPvpPlayerStat {
  bool                    IsRobot           = 1;   // 是否是机器人
  bool                    IsHook            = 2;   // 是否挂机，暂时没用
  string                  Id                = 3;   // 玩家id
  string                  UsrName           = 4;   // 玩家昵称
  uint32                  HeadPic           = 5;   // 玩家头像
  uint32                  MMR               = 6;   // 玩家排位分值
  uint32                  ChessPlayer       = 7;   // 棋手id
  repeated uint32         ChessList         = 8;   // 上阵棋子列表
  uint32                  Round             = 9;   // 总回合数
  uint32                  WinRound          = 10;  // 胜利回合数
  uint32                  FailRound         = 11;  // 失败回合数
  uint32                  DrawRound         = 12;  // 平局回合数
  uint32                  KillNum           = 13;  // 击杀棋子数
  uint32                  DeathNum          = 14;  // 棋手被敌方棋子攻击次数
  uint32                  SurviveTime       = 15;  // 坚持时长
  uint32                  Hp                = 16;  // 当前血量
  uint32                  ChessPlayerLvl    = 17;  // 棋手等级
  uint32                  Asyn              = 18;  // 是否发生不同步
  bool                    IsDeath           = 19;  // 是否死亡
  uint32                  TeamId            = 20;  // 队伍Id
  uint32                  TeamPlayerNum     = 21;  // 队伍人数
  uint32                  Money             = 22;  // 除开出售棋子外的所有收益
  map<uint32, uint32>     CurShowItems      = 23;  // {itemtype:itemid}
  map<uint32, uint32>     ChessRace         = 24;  // {上阵种族:生效层数}
  map<uint32, uint32>     ChessPro          = 25;  // {上阵职业:生效层数}
  uint32                  TotalValue        = 26;  // 上阵棋子总价值
  repeated uint32         ShareChessList    = 27;  // 共享棋子列表
  repeated CSDTFetters    Fetters           = 28;  // 羁绊
  repeated Contest        ShowChessList     = 29;  // 需要展示的棋子列表
  CSDTPvpMvp              PvpMvp            = 30;  // 战斗MVP数据
  string                  Country           = 31;  // 国家
  bool                    LeaveInAdvance    = 32;  // 是否提前离开游戏
  uint32                  AFKTime           = 33;  // 玩家未操作时间
  uint32                  Province          = 34;  // 所属省
  TEAMGROUP               Group             = 35;  // 用户组id
  map<uint32, uint32>     UnlockedChess     = 36;  // 本场战斗解锁的图鉴
  repeated uint32         PassportTypeIds   = 37;  // 通行证类型IDList
  uint32                  PlayerIndex       = 38;  // 玩家index
  int32                   CurrencyID        = 39;  // 本局收益的货币ID
  int32                   SurplusCurrency   = 40;  // 带入战斗剩余值
  int32                   Income            = 41;  // 本局收益的货币数量(具体算法问策划)
  CHANELTYPE              ChannelType       = 42; // ps4
  string                  channelUsrId      = 43; // ps4
  UserRestrictType        RestrictType      = 44; // 用户限制
  uint32                  PlayerRank        = 45;  //玩家排名
  int32                   MoneyCost         = 46; // 对局花费
  int32                   MoneyIncome       = 47; // 对局收益
  uint32                  Score             = 48; // 积分
  repeated uint32         ChoseCardGroup    = 49; // 所选择的卡组
  map<uint32, KernelItem> PveItems          = 50; // 内核返回的道具id
  repeated uint32         AllChoseCardGroup = 51; // 所选择的卡组
  EXCHANGESTATE           ExchangeState     = 52; //拍卖行状态
  int32					  TaskId			= 53; // 任务id
  bool					  IsTaskComplete	= 54; //任务是否完成
  int32					  CurTaskProgress	= 55; //当前的任务进度
  int32					  MaxTaskProgress	= 56; //任务的总进度
}

message KernelItem {
  uint32 Id    = 1;
  uint32 Count = 2;
}
message CSDTFetters {
  uint32 ResId        = 1;
  uint32 EffectNum    = 2;    //生效层数
  uint32 MaxEffectNum = 3;    //最大层数
}

message CSDTPlayerFinish{
  uint32            PlayerIndex = 1; //玩家id
  uint32            DeathIndex  = 2; //死亡序号
  uint32            FrameIndex  = 3; //帧号
  CSDTPvpCampResult CampResult  = 4;
  CSDTPvpStat       Stat        = 5;
}

message CSDTMarqueeItem{
  int64  Id        = 1; //跑马灯id
  string Content   = 2; //内容
  int64  StartTime = 3; //起始时间
  int64  EndTime   = 4; //截止时间
  uint32 Frequency = 5; //滚动频率
  uint32 Flag      = 6; //0代表明文，1代表语言key
}

message CSDTMarquee{
  repeated CSDTMarqueeItem Items = 1; //跑马灯列表
}

//条件结构
message Cond {
  CONDTYPE       Type = 1;    //条件类型
  repeated int32 Para = 2;    //条件参数
  string         Mode = 3;    //条件模式(这里用string而不是int，以区分0和空)
}

message CSDTChessPlayerEquip{
  uint32 Id         = 1;      // cfgID
  string InstanceId = 2;  // 实例ID
}

message CSDTChessPlayer{
  uint32                            Id         = 1;
  uint32                            Skin       = 2;
  uint32                            Action     = 3;
  uint32                            Picture    = 4;
  uint32                            Voice      = 5;

  map<uint32, uint32>               Equips     = 10;   //棋手装扮
  map<uint32, CSDTChessPlayerEquip> Equip      = 11;  //棋手装扮 {key:ITEM_TYPE}
  string                            InstanceId = 12; //棋手实例ID
}

message CSDTTelBook {
  string Id   = 1;    //玩家id
  string Tel  = 2;    //电话
  string Name = 3;    //昵称
  uint32 Mmr  = 4;    //段位
}

message LanguageData{
  string          Key       = 1;
  repeated string Languages = 2;
}

message GMLanguageData{
  string              Key       = 1;
  map<string, string> Languages = 2;
}

message CommonKVString {
  string Key   = 1;
  string Value = 2;
}

message CDNLanguageData{
  string                  Key       = 1;
  repeated CommonKVString Languages = 2;
}

message CSDTSeason{
  uint32 CurRankSeason      = 1;
  bool   SeasonAwarded      = 2;
  uint32 SeasonTaskProgress = 3;
}

message CSDTActivity {
  map<uint32, CSDTActivityGroup> Groups         = 1; //活动组
  repeated uint32                Questionnaires = 2; //玩家能够回答的问卷列表（不判断是否是活动时间内）
  bool                           UseExcelConf   = 3; //使用excel的配置
}

message CSDTActivityGroup {
  map<uint32, CSDTActivityDetail> Activities = 1;  //活动
  string                          Md5Sum     = 2;  //MD5码
  int64                           BeginTime  = 3;  //新手活动开始时间
  CSDTActivityRecord              Record     = 4;  //消息记录
  uint32                          LoginDays  = 5;  //活动开启后登录天数
  int32                           ChestLevel = 6;  //宝箱等级
  int64                           EndTime    = 7;  //活动结束时间(部分活动使用)
}

message CSDTActivityDetail {
  uint32 Id       = 1;    //活动ID
  uint32 Progress = 2;    //活动进度
  bool   GetAward = 3;    //是否已领奖
  string Md5Sum   = 4;    //MD5码
  bool   Unlock   = 5;    //是否解锁
}

message CSDTActivityRecord {
  map<uint32, uint32> Process = 1;  //活动组完成进度
  map<uint32, uint32> Reward  = 2;  //领奖情况
  bytes               Params  = 3;  //其他参数
}

//招募状态
enum PlayerRecruitStatus {
  RECRUIT_INIT    = 0;  //未招募
  RECRUIT_INVITE  = 1;  //邀请招募
  RECRUIT_SUCCESS = 2;  //成功招募
  RECRUIT_INVALID = 3;  //无法招募(已经被其他人招募)
}

// 玩家身上的招募数据
message CSDTRecruitData {
  map<uint32, bool> IsRecruited = 1; //是否被招募 {活动GroupId,是否被招募}
}
//被招募玩家数据
message CSDTRecruitPlayer {
  PlayerRecruitStatus Status      = 1; //是否被招募
  uint32              BattleCount = 2; //对局数
}

message CSDTActivityRecruit {
  map<string, CSDTRecruitPlayer> Players = 1;  //招募玩家List {玩家ID,玩家信息}
}

message CSDTActGroupBuy {
  map<string, uint32>             Process = 1;   //档位 - 人次
  map<string, CSDTActGroupBuyRwd> Reward  = 2;   //档位 - 是否领奖
}

message CSDTActGroupBuyRwd {
  map<string, uint32> Rewards = 1;
}

//招募活动数据
message CSDTActRecruitData {
  string                         Inviter = 1; //招募者
  map<string, CSDTRecruitPlayer> Players = 2; //招募玩家List {玩家ID,玩家信息}
}

//幸运商店数据
message CSDTActLuckMallData {
  repeated uint32 MallGoods = 1;   //幸运商店商品列表
  int32           TabId     = 2;  //栏位ID
  uint32          Discount  = 3;  //折扣信息
}

// 客户端使用
enum TeachPhase {
  Over            = 0;//引导完成

  None            = 1;//默认值

  IfSkipGuide     = 10;//是否跳过新手引导

  Guide           = 11;// 新手引导

  NewPlayerMode   = 12;// 新手模式，包含完成后选中单人模式（非强制)

  ActualBattle    = 13;//实战训练

  FirstTeachLevel = 14;//教学关卡第一关

  ModeSelect      = 15; //聚焦模式选择（非强制)

  BeginPlay       = 16;// 聚焦开始游戏（非强制）
  MentorShipPlay  = 17;// 师徒新手引导
}

message CSDTMelee {
  uint32 Progress       = 1;    //活动进度
  bool   GetAward       = 2;    //是否已领奖
  int64  MeleeBeginTime = 3;
  int64  MeleeEndTime   = 4;
}

message CSDTTeamSlotPlayer{
  string       Id           = 1;
  bool         IsAI         = 2;
  uint32       Slot         = 3;
  TEAMGROUP    Group        = 4;
  string       UsrName      = 5;
  uint32       HeadPic      = 6;
  string       Region       = 7;
  uint32       Province     = 8;
  uint32       HeadPicFrame = 9;
  uint32       Lvl          = 10;
  uint32       Cup          = 11;
  PLATFORMTYPE PlatformType = 12;
  string       Country      = 13;
}

message CSDTTeamVoicePlayer {
  string Id          = 1;
  string VoiceId     = 2;
  uint32 VoiceMemId  = 3;    // 腾讯语音使用
  string VoiceUserId = 4;    // 龙渊语音使用
}

enum EFFECTTIMETYPE {
  EFFECTTIMETYPE_NULL = 0;
  WEEKDAY             = 1;
  FIXDATETIME         = 2;
}

enum ACTIVITYTEAMSTATE {
  TEAMNULL = 0;
  TEAMIN   = 1;
  TEAMOUT  = 2;
}

//活动组数据
message ActivityGroupData {
  uint32              Id              = 1;    //活动组ID
  ACTIVITYTYPE        Type            = 2;    //活动切页
  string              TabName         = 3;    //切页名字
  string              TabIcon         = 4;    //切页图标
  string              BeginShowTime   = 5;    //开始展示时间
  string              BeginTime       = 6;    //开始时间
  string              EndTime         = 7;    //结束时间
  string              EndShowTime     = 8;    //结束展示时间
  uint32              Duration        = 9;    //活动持续时间
  uint32              PrivateData     = 10;   //活动组私有数据 已删？
  bool                Open            = 11;   //活动开放开关(应急用)
  uint32              ActivityId      = 12;   //活动ID
  uint32              RepeatType      = 13;   //重复的类型
  string              ShowParam       = 14;   //客户端显示
  repeated BuffEffect BuffEffects     = 15;   //buff效果
  repeated uint32     Modes           = 16;   //buff生效的模式
  uint32              PageType        = 17;   //活动派别  活动的分类
  string              PicName         = 18;   //大图名称  打脸图名称
  bool                PicOpen         = 19;   //大图开关  打脸图开关
  uint32              SubscriptType   = 20;   //角标名称  活动页签上的角标名称
  uint32              OrderID         = 21;   //活动排序  左侧活动页签排序
  uint32              PicInterval     = 22;   //弹出间隔  打脸图弹出的时间间隔
  uint32              PicSwitchOpen   = 23;   //跳转开关  打脸图是否跳转的开关
  EFFECTTIMETYPE      EffectTimeType  = 24;   //buff活动配置时间方式
  string              EffectWeekday   = 25;   // buff活动生效周几列表
  string              TakeEffectDate  = 26;   // buff活动生效日期
  string              TakeEffectTime  = 27;   // buff活动生效时间
  string              TakeEffectRank  = 28;  //  生效段位
  string              TakeEffectMode  = 29;  // 生效的mode列表
  ACTIVITYTEAMSTATE   TeamState       = 30;  // 组队状态条件生效
  uint32              UIStylePhone    = 31;  // 手游的活动ui 样式
  uint32              UIStylePC       = 32;  //端游活动UI样式
  string              Zone            = 33;  //所属分区信息 逗号分隔 例子：0代表所有分区 1代表1区  1,2代表1和2区
  repeated string     Channels        = 34;  //渠道列表
  string              TakeEffectLevel = 35;  // buff生效等级
  int32               MakeUp          = 36;  //活动标记，目前用来做活动签到的补签开关
  int64               LeastMach       = 37;  //全民对局保底增量
  string              PlatformClose   = 38;  //活动关闭的平台
}

enum ActivityResetType {
  ART_NULL     = 0;
  WEEK         = 1;  // 周
  WEEKREFRESH  = 2; // 每周刷新
  SEASEN       = 3;    // 赛季重置
  DAYLYREFRESH = 4; // 每日重置
}

//活动数据
message ActivityData {
  uint32            GroupId         = 1;    //活动组ID
  uint32            Id              = 2;    //活动ID
  string            Title           = 3;    //活动标题
  uint32            Unit            = 4;    //条件进度换算单位
  Cond              Cond            = 5;    //条件
  repeated Award    Awards          = 6;    //奖励
  uint32            CondGroup       = 7;    //条件组ID
  uint32            PreCondGroup    = 8;    //前置条件组ID
  string            SkipInterface   = 9;    //跳转界面名字
  uint32            SkipTab         = 10;   //跳转界面切页标识
  uint32            Day             = 11;   //天数
  string            Desc            = 12;   //描述
  uint32            ShowQuality     = 13;   //累充累消档位图片背景颜色
  string            ShowGiftPic     = 14;   //累充累消档位展示奖励图片
  ActivityResetType ResetType       = 15;   //活动重置类型 已删？
  bool              IsRecruiter     = 16;  //是否是征募者活动
  uint32            ProgressInherit = 17;   //继承任务ID
  uint32            ShowOrder       = 18;   //任务排序
}

//活动组属性
message ActivityAttrData {
  uint32     ID          = 1;    //活动组ID
  ABTESTTYPE ABTestType  = 2;    //ABTest key
  uint32     ABTestValue = 3;    //ABTest value
}

message GMLanguageInfo {
  string LanguageType = 1;
  string Translate    = 2;
}

message PlayLimit {
  uint32 Age   = 1; //年龄
  uint32 Count = 2; //游戏场次
}

message ChannelFunctionData {
  string             ChannelId        = 1; //渠道类型
  bool               ForbiddenLogo    = 2; //12禁Logo
  bool               AgeJudge         = 3; //年龄判断
  bool               InformationInput = 4; //信息录入
  bool               GameRestrict     = 5; //场次限制
  uint32             ForbiddenAge     = 6; //禁止登录玩家年龄
  repeated PlayLimit PlayLimits       = 7; //游戏场次限制
}

message PvpHistoryData{
  uint64            PvpId         = 1;
  int64             CreateTime    = 2;
  PVPMODE           Mode          = 3;
  CSDTPvpCampResult CampResult    = 4;
  uint32            MeleeRule     = 5;
  uint32            CustomSubMode = 6;
  uint64            TournamentId  = 7;   // 赛事id
  uint64            GameId        = 8;  // 赛事对局Id
  PvpTeachResult    TeachResult   = 9;  // 教学关卡
  PvpExtData        ExtData       = 10;  // 扩展字段
  PlayerExtMap      PlayerExtData = 11; //玩家信息扩展字段
  BattleExtData     BattleExt     = 12; //创意工坊扩展字段
}

message CSDTGuide {
  string GuideName = 1;    //步骤名称
  uint32 Status    = 2;    //状态
  uint32 GuideID   = 3;    //步骤ID
  uint32 Sequence  = 4;
  uint32 LastSeq   = 5;
}

message CSDTChat {
  uint32           EmotionId    = 1;    //表情ID
  string           SenderId     = 2;    //发送者ID
  string           Content      = 3;    //文本内容
  CHANELTYPE       ChannelType  = 4;    // ps4 Only 额外信息
  string           ChannelUsrId = 5;    // ps4 Only 额外信息
  bool             PS4Only      = 6;    // ps4 Only 开关
  CHATSOURCETYPE   SourceType   = 7;    //聊天来源类型
  UserRestrictType RestrictType = 8; // 用户限制类型
}

//商品信息
message CSDTGoods {
  uint32 Id    = 1; //商品ID
  uint32 Count = 2; //商品数量
  uint32 Uid   = 3; //随机库ID
}

message CSDTGoodsInfo {
  SHOPTYPE           Type        = 1;
  repeated CSDTGoods GoodsInfo   = 2; //{uid：商品ID}
  int64              RefreshTime = 3; //上次刷新时间
}

//商城栏位信息
message MallTabData {
  uint32      Id                 = 1; //栏位ID
  string      Title              = 2; //栏位标题
  MALLTABTYPE Type               = 3; //栏位类型
  //    string              OpenTime            = 4; //开放时间
  //    string              CloseTime           = 5; //关闭时间
  uint32      Sort               = 6; //展示顺序
  //    string              SubTitle            = 7; //子标题
  //    string              Icon                = 8; //图标
  //    uint32              UIStyle             = 9; //界面风格
  //    string              Info                = 10;//商城栏位信息
  uint32      Skips_Interface_pc = 11;//PC客户端跳转页面
  uint32      ItemTypePage       = 12;//物品类型页签
}

//商城商品信息
message Skip {
  string Interface = 1;
  uint32 Tab       = 2;
}

message MallGoodsData {
  uint32                   Id                     = 1; //商品ID
  repeated Award           Contents               = 2; //商品内容
  repeated Consume         Consumes               = 3; //商品消耗
  int64                    OnSaleBeginTime        = 4; //折扣开始时间
  int64                    OnSaleEndTime          = 5; //折扣结束时间
  uint32                   SellCountLimit         = 6; //限购次数
  uint32                   SellCountResetInterval = 7; //限购充值周期
  MALL_GOODS_FLAG          Flag                   = 8; //标签
  bool                     BulkBuying             = 9;//批量购买标识
  uint32                   Recommend              = 10;//推荐页额外展示
  uint32                   Sort                   = 11;//展示顺序
  uint32                   MallTabId              = 12;//所属栏位ID
  //    repeated Skip       Skips                   = 13;//跳转信息
  //    string              SkipsComment            = 14;
  int64                    ShowBeginTime          = 15;
  int64                    ShowEndTime            = 16;
  uint32                   GroupId                = 17;
  bool                     GroupShowFirst         = 18;
  bool                     ShowResource           = 19;
  uint32                   ChargePrivatePara      = 20; //关联充值表
  int64                    SellCountStartTime     = 21; //限购开始时间
  int32                    Skips_Interface_pc     = 22; //PC客户端跳转页面
  uint32                   MoneyOffCount          = 23; //满减数量
  uint32                   MoneyOff               = 24; //满减折扣
  uint32                   Recommend2Nd           = 25; //2级推荐页额外展示
  uint32                   Recommend3Rd           = 26; //3级推荐页额外展示
  uint32                   Zone                   = 27; //分区
  bool                     RepeatedBuy            = 28; //是否可重复购买
  repeated string          DownloadList           = 29; //下载渠道
  repeated PLATFORMTYPE    PlatformList           = 30; //平台类型
  repeated Consume         Consumes2Nd            = 31; //商品消耗_货币2
  int64                    OnSale2NdBeginTime     = 32; //折扣开始时间_货币2
  int64                    OnSale2NdEndTime       = 33; //折扣结束时间_货币2
  uint32                   MoneyOff2NdCount       = 34; //满减数量_货币2
  uint32                   MoneyOff2Nd            = 35; //满减折扣_货币2
  string                   Version                = 36; //版本号
  repeated string          ExcludeDownload        = 37; //下载渠道 除外
  repeated string          CountryList            = 38; //国家列表
  bool                     DisableDeduction       = 39; //是否禁止使用打折券
  string                   VideoUrl               = 40; //视频地址
  repeated Award           Gifts                  = 41; //赠送商品
  int64                    RecommendBeginTime     = 42; //1级推荐栏位开始时间
  int64                    RecommendEndTime       = 43; //1级推荐栏位结束时间
  int64                    Recommend2NdBeginTime  = 44; //2级推荐栏位结束时间
  int64                    Recommend2NdEndTime    = 46; //2级推荐栏位结束时间
  int64                    Recommend3RdBeginTime  = 47; //3级推荐栏位结束时间
  int64                    Recommend3RdEndTime    = 48; //3级推荐栏位结束时间
  repeated ConsumeIncrease ConsumeInc             = 49; //消费递增
  ConsumeIncreaseRefresh   ConsumeIncRefresh      = 50; //消费递增刷新周期
  bool                     ConsumesUrl            = 51; //跳转到其他地址进行购买
  string                   ConsumesUrlWeb         = 52; //网页链接
  string                   ConsumesUrlApp         = 53; //应用scheme
  uint32                   Series                 = 54; //系列类型
}

message ConsumeIncrease {
  uint32 Count = 1;
}

enum ConsumeIncreaseRefresh{
  CIRefreshNo   = 0; // 不更新
  CIRefreshDay  = 1; // 天更新
  CIRefreshWeek = 2; // 周更新
}

message CSDTMallGoodsData {
  MallGoodsData MallGoods     = 1; //配置表信息
  uint32        BuyCount      = 2; //购买次数
  int64         LastResetTime = 3; //上次限购次数重置时间
}

message CSDTMallGoods {
  repeated CSDTMallGoodsData MallGoods = 1; //商城栏位商品
}

message CSDTMallBuyCountData {
  uint32 Id            = 1; //id
  uint32 BuyCount      = 2; //购买次数
  int64  LastResetTime = 3; //上次限购次数重置时间
}

message CSDTMallBuyCount {
  repeated CSDTMallBuyCountData MallGoods = 1; //商城栏位商品
}

message MallNoticeData {
  uint32   Id            = 1; //Id
  string   PicName       = 2; //图片名
  uint32   SortId        = 3; //排序Id
  SKIPTYPE SkipType      = 4; //跳转类型
  string   SkipName      = 5; //跳转大界面名字
  uint32   SkipTap       = 6; //跳转页面显示分页名字
  uint32   MallGoodsId   = 7; //商城商品Id
  string   Country       = 8; //国家地区
  string   ShowBeginTime = 9; //
  string   ShowEndTime   = 10;
}
//物品多项配置
message CSDTCommonRandList {
  ITEMTYPE        Type = 1;    //物品类型
  repeated uint32 List = 2;    //物品列表
}

// 每日签到活动数据
message Sign {
  uint32 Day      = 1;         // 签到的天
  uint32 AwardDay = 2;    // 领取奖励池中的第几天的奖励
}
message CSDTSignData {
  repeated Sign   SignList       = 1;           // 当月签到情况
  uint32          TodayAwardDay  = 2;      // 今天应该领取奖励池中第几天的奖励
  uint32          ShareCount     = 3;         // 本月累计分享次数
  repeated uint32 ShareAward     = 4;         // 已经领取的分享奖励的次数
  repeated uint32 Fit            = 5;                // 今日最宜
  repeated uint32 Avoid          = 6;              // 今日不宜
  uint32          LuckyChess     = 7;         // 今日幸运棋子
  uint32          FortuneProverb = 8;     // 今日棋运箴言
  uint32          FitAvoid       = 9;     // 今日棋运箴言
}

// 赛事数据
message MatchTeamData {
  int32  Id          = 1;            // 赛事id
  int32  Count       = 2;            // 房间数
  uint32 StartTeamId = 3;            // 开始ID
  int64  EndTime     = 4;            // 结束时间
}

message CSDTRecommendPlayer {
  string           Id               = 1;    //玩家ID
  uint32           Cup              = 2;    //段位
  uint32           HeadPic          = 3;    //头像
  string           Name             = 4;    //用户名
  uint32           Scene            = 5;    //场景（棋盘）
  uint32           ChessPlayer      = 6;    //棋手
  uint32           RecommendScore   = 7;    //玩家推荐分
  uint32           HeadPicFrame     = 8;    //头像框
  OBSERVEPRIVILEGE ObservePrivilege = 9;    //观战权限
  PLATFORMTYPE     PlatFormType     = 10;  //平台类型
  bool             Ps4Only          = 11;  //psonly
  UserRestrictType RestrictType     = 12; // 用户限制类型
}

//第三方比赛信息
message CSDTThirdPvpInfo {
  uint64 ID            = 1; //赛事ID
  string Title         = 2; //标题
  string Content       = 3; //内容
  string BigPic        = 4; //大图url
  string SmallPic      = 5; //小图url
  string RecommendIcon = 6; //推荐图标
  int64  PvpStartTime  = 7; //比赛开始时间
  int64  PvpEndTime    = 8; //比赛结束时间
  string PreShowPic    = 9; //预告图标
}

message CSDTRecommendPvpInfo {
  CSDTRecommendPlayer PlayerInfo    = 1; //展示的玩家信息
  uint64              PvpId         = 2;
  uint32              ObserveCount  = 3;
  int64               StartTime     = 4;
  PVPMODE             Mode          = 5;
  TournamentDesc      Tournament    = 6; //赛事信息
  uint64              ThirdPvpID    = 7; //第三方比赛ID
  uint32              SubMode       = 8; //子模式ID
  Authority           AuthorityData = 9; //是否是官方指定房间
}

// 微信大玩家信息
message WxVVipData {
  uint32 Level         = 1;    //大玩家等级
  int64  WeeklyTAwardT = 2;    //vip周奖励结算时间戳
  int64  DailyVAwardT  = 3;    //vip日奖励时间戳
  int64  DailyAwardT   = 4;    //普通日奖励时间戳
}

//微信大玩家红包活动
message CSDTWxRedPktItem {
  string RedPktIdx = 1;
  uint32 RedPktId  = 2;
}

message CSDTWxRedPktProfile {
  uint32 SelfRank = 1;    //自己排名
  uint32 SelfLike = 2;    //自己获得点赞数
}

message CSDTWxVVipRankItem {
  string UId   = 1;
  string Name  = 2;
  uint32 VLvl  = 3;
  uint32 Likes = 4;
}

message CSDTSlotInfo {
  string Id   = 1;
  uint32 Slot = 2;
}

message CSDTRedPktData {
  string UId   = 1;   //玩家id
  string Name  = 2;   //玩家名字
  uint32 Award = 3;   //领取红包金额
}

message CSDTRedPktInfo {
  uint32                  RedPktId = 1;
  int64                   RankVer  = 2;
  repeated CSDTRedPktData Rank     = 3;
}

// 封禁信息
message SwitchItem {
  SWITCHTYPE SwitchType = 1; // 封禁类型
  bool       Forbid     = 2; // 是否封禁
  int64      EndTime    = 3; // 结束时间(endTime==0 为永久封禁)
}

message CreditCfgItem {
  int32 ActId       = 1;        // id
  int32 ThresholdHi = 2;  // 信用分限制上限
  int32 ThresholdLo = 3;  // 信用分限制下限
  int32 LimitLv     = 4;      // 等级限制
}

message CSDTPunishment {
  uint32                      Id              = 1;
  repeated PUNISHMENTTYPE     Types           = 2;
  int64                       ExecuteDeadline = 3;
  repeated PUNISHMENTBEHAVIOR Triggers        = 4;
}

//惩罚简略
message CSDTPlayer {
  string PlayerId = 1;
  string UserName = 2;
}

message CSDTBriefPunishment {
  repeated CSDTPlayer UserName           = 1;
  int64               PunishmentDeadline = 2;
}

//匹配成功通知
message PlayerConfirmInfo {
  string PlayerId     = 1;    //玩家ID
  uint32 HeadPic      = 2;    //头像
  uint32 HeadPicFrame = 3;    //头像框
  string UserName     = 4;    //玩家名字
  bool   IsRobot      = 5;    //是否是机器人
}

// 问卷答案
message AnswerData {
  uint32          Index    = 1;    // 答题序号
  repeated string Contents = 2;  // 答题内容
}

// 视频信息
message VideoInfo {
  uint32     Id          = 1;        // 视频id  删除的时候只需填写id
  string     Name        = 2;        // 视频名称
  VIDEO_TYPE Type        = 3;        // 视频类型
  string     PicUrl      = 4;        // 视频预览图url
  string     ContentUrl  = 5;        // 视频内容url
  bool       LanguageKey = 6;    // 视频名称是否是语言key
}

// 沉迷信息
message CSDTAddictionInfo {
  bool   IsAuthAddiction    = 1;   //玩家是否进行沉迷认证
  string AuthAddictionToken = 2;   //沉迷认证token
  bool   IsVerified         = 3;   //是否已实名认证
}

message KrAddictionInfo {
  int64 LoginTime      = 1;      //登陆时间
  bool  IsCheckAddic   = 2;     //是否检测沉迷
  int64 StartLimitTime = 3;     //沉迷限制开始时间
  int64 EndLimitTime   = 4;     //沉迷限制结束时间
  int64 Countdown1     = 5;     //倒计时1
  int64 Countdown2     = 6;     //倒计时2
  int64 durantion      = 7;     //持续时间
}

// 角色多选一中，多角色的展示信息
message MultiPlayer {
  string Id            = 1; //id
  string Name          = 2; //昵称
  uint32 HeadPic       = 3; //头像
  uint32 HeadPicFrame  = 4; //头像框
  uint32 Level         = 5; //等级
  uint32 MMR           = 6; //杯段
  uint32 Diamond       = 7; //甜甜圈数量
  string Region        = 8; //区服
  uint32 Money         = 9; //糖果数量
  uint32 PassportLevel = 10; //通行证等级
}

message CSDTBannerInfo {
  repeated CSDTBanner Data = 1; //banner
}

// banner
message CSDTBanner {
  int64                 Id              = 1; //Id
  string                PicUrl          = 2; //图片CDN地址
  BANNERTYPE            BannerType      = 3; //banner类型
  SKIPTYPE              SkipType        = 4; //跳转类型
  string                SkipName        = 5; //跳转大界面名字
  uint32                SkipTap         = 6; //跳转页面显示分页名字
  uint32                MallGoodsId     = 7; //商城商品Id
  repeated string       CountryList     = 8; //国家
  int64                 ShowBeginTime   = 9; //展示开始时间
  int64                 ShowEndTime     = 10; //展示结束时间
  repeated uint32       ZoneId          = 11; //投放地区
  repeated string       DownloadList    = 12; //下载渠道
  repeated PLATFORMTYPE PlatformList    = 13; //平台类型
  string                PCSkipUrl       = 14; //pc端图片跳转地址
  repeated uint32       HallModeList    = 15; //大厅模型展示的物品Id
  int64                 Sort            = 16; //排序
  repeated string       ExcludeDownload = 17; // 下载渠道 除外
}

message CSDTTournament {
  uint64                       Id             = 1;    //赛事ID
  uint32                       EnrollCount    = 2;    //报名数
  bool                         Enroll         = 3;    //该玩家是否报名
  bool                         Out            = 4;    //该玩家是否被淘汰
  uint32                       JoinCount      = 5;    //玩家参与该赛事的次数
  repeated CSDTTournamentClass Classes        = 6;    //每级别每轮次对战信息
  uint64                       Round          = 7;    //当前轮次
  uint64                       LastGameId     = 8;    //上一场对局
  uint64                       EnrollClass    = 9;    //报名级别
  int32                        GroupIdx       = 10;   //当前组idx
  map<uint64, uint32>          RankInfo       = 11;   //玩家所有轮次排名信息
  repeated uint32              PointAwardGet  = 12;   //积分进度领取情况
  bool                         Battle         = 13;   //当前轮次是否参与过对局
  map<uint32, uint32>          Points         = 14;   //玩家获得的赛事积分
  bool                         ChallengeAgain = 15;   //玩家是否再次确认开始挑战
  map<uint64, uint32>          RoundPoints    = 16;   //轮次内积分
  TOURNAMENTSTATUS             Status         = 17;   //赛事状态
}

message CSDTActDaySign {
  map<uint32, CSDTActDaySignDetail> SignDay            = 1;  //每个周期的签到信息{dayNum,是否签到}
  uint32                            Loop               = 2;  //第几伦的签到
  uint32                            Day                = 3;  //签到第几天
  uint32                            ReSignTimes        = 4;  //补签次数
  bool                              CanSign            = 5;  //今日能否签到
  bool                              CanGetSpecialAward = 6;  //能否领取特殊奖励
}

enum ActSignType {
  UnSign = 0;
  SignIn = 1;
  ReSign = 2;
}

message CSDTActDaySignDetail {
  ActSignType Type = 1;
  int64       Time = 2;
}

enum GDBinType {
  BinNull         = 0;
  CommonFile      = 1; // 策划配置 common配置
  CoreFile        = 2; // 内核 配置
  UnityLocFile    = 3; // unity 客户端本地配置
  UnityGlobalFile = 4; // unity 客户端全局配置
  PCFile          = 5; // pc配置
}


message CSDTGDCommonBin {
  string    Name    = 1;  // 文件名 到后缀
  string    Md5sum  = 2; // 文件MD5sum
  GDBinType ConfTyp = 3;  //配置文件类型
  bytes     Datas   = 4; // 原始文件内容
}

message CSDTTournamentClass {
  uint64                       ClassId        = 1;
  map<uint32, CSDTBattleGroup> Groups         = 2;   //每个轮次的战斗分组
  int32                        MaxPlayerCount = 3;    //玩家数量上限  -1表示无上限
  bool                         Cancel         = 4;    //该级别是否取消
}

//message CSDTTournamentRound {
//    uint64                          RoundId             = 1;
//    repeated CSDTBattleGroup        Groups              = 2;   //每个轮次的战斗分组
//    bool                            Join                = 3;   //是否参与过该轮次的一场比赛
//}

message CSDTBattleGroup {
  map<string, uint64> Players        = 1; //每个战斗组的成员    {玩家ID:轮次ID}
  int64               LastPvpEndTime = 2; //上个对局结束时间
  uint64              GameID         = 3; //正在或者将要进行的id 固定战斗组
  bool                IsFighting     = 4; //是否正在对局中
  uint64              RoundID        = 5; //GameID对应的轮次ID
  map<string, uint64> GameIDs        = 6; //匹配组当前参加的所有gameId
}

message CSDTEnrollEnd {
  uint64                       Id            = 1;    //赛事ID
  repeated uint64              CancelClasses = 2;    //取消的级别
  repeated CSDTTournamentClass ClassGroups   = 3;    //战斗分组
}

message CSDTNewTournament {
  uint64             Id      = 1;    //赛事ID
  map<uint64, int32> Classes = 2;    //{级别ID:每个级别的玩家上限}
}

message TournamentDesc {
  uint64 TournamentID = 1; // 赛事ID
  uint64 TNClass      = 2; // 赛事级别
  int32  GroupIndex   = 3; // 赛事组index
  uint64 TNClassRound = 4; // 赛事轮次
}

message TournamentRoom {
  uint64                 GameStartTime  = 1; // unix timestamp
  repeated string        ReadyIds       = 2; // 已准备的玩家id
  uint32                 SelfSlot       = 3;
  repeated PvpPlayerData PlayerDatas    = 4; // 房间成员的pvpData
  int32                  MaxPlayerCount = 5; // 房间最大人数
  uint64                 TournamentID   = 6;
  uint64                 ClassID        = 7;
  uint64                 RoundID        = 8; // 自己的轮次ID
  int32                  GroupIndex     = 9;
  TeamState              Status         = 10;
}

// 玩家赛事信息
message PlayerTournament {
  string                            Id          = 1;         // 玩家id
  map<uint64, PlayerTournamentData> Data        = 2;         // 玩家参加的所有赛事信息
  map<uint32, uint32>               Points      = 3;         // 玩家所有全局积分信息
  map<uint64, uint32>               EnrollCount = 4;   // 赛事报名次数
}

// 玩家每个赛事数据
message PlayerTournamentData {
  uint64                 Id         = 1;            // 赛事id
  uint64                 ClassId    = 2;            // 级别
  map<uint32, bool>      GetReward  = 3;            // 当前赛事进度积分奖励领取情况 最小奖励范围值
  map<uint32, uint32>    Points     = 4;            // 积分
  uint64                 CurRound   = 5;            // 当前轮次
  uint64                 GameId     = 6;            // 对局id
  bool                   Out        = 7;            // 是否淘汰
  int64                  SignUpTime = 8;            // 报名时间
  map<uint64, RoundData> Data       = 9;            // 所有参与轮次信息
  uint64                 PvpId      = 10;           // 对局对应的pvpId
  int64                  PvpEndTime = 11;           // 对局结束时间 如果LastGameId和LastPvpId不为0，而此值为0代表进行中
}

// 玩家每个轮次信息
message RoundData  {
  uint64              Round      = 1;        // 轮次
  uint32              Rank       = 2;        // 当前轮次的排名  只有在轮次结束时才会设置
  map<uint32, uint32> Points     = 3;        // 积分
  uint32              FightTimes = 4;        // 已参与对局数
  uint32              TotalRank  = 5;        // 总名次 除对局数得到平均名次
  uint32              TopCnt     = 6;        // 第一名次数
  uint32              SecondCnt  = 7;        // 第二名次数
  uint32              ThirdCnt   = 8;        // 第三名次数
  uint32              WinTimes   = 9;        // 战斗胜利回合数
  uint32              LostBlood  = 10;        // 总计棋手受到伤害
  uint32              Damage     = 11;       // 总计对其他棋手造成伤害
}

message GuildBaseInfo {
  string         ID            = 1;
  string         Name          = 2;
  int32          Sign          = 3; // 标志
  string         Notice        = 4; // 公告
  string         RecruitNotice = 5; // 招募公告
  repeated int32 Tags          = 6; // 标签
  string         Country       = 7; // 国家
  string         Language      = 8; // 语言
  bool           RequirePermit = 9; // 加入限制
  int32          RequireCup    = 10; // 最低段位
  int32          MemberCount   = 11; // 成员人数
  uint32         Province      = 12;
  string         Owner         = 13;
  string         OwnerName     = 14;
  int32          Level         = 15;
  int32          Exp           = 16;
  string         ChannelUsrID  = 17; // 会长channeluid
}

message GuildAttr {
  string          Name          = 1;
  int32           Sign          = 2; // 标志背景
  string          Notice        = 4; // 公告
  string          RecruitNotice = 5; // 招募公告
  repeated int32  Tags          = 6; // 标签
  string          Owner         = 7;
  string          OwnerName     = 8;
  GUILDPERMITTYPE RequirePermit = 9; // 加入限制
  int32           RequireCup    = 10; // 最低段位
  string          Country       = 11;
  uint32          Province      = 12;
  string          Language      = 13;
}

message GuildApplicant {
  string Player       = 1;
  int64  ts           = 2;
  string ChannelUsrID = 3;
}

message GuildMember {
  string        Player      = 1;
  GUILDROLETYPE Role        = 2;
  int32         ActiveScore = 3;
}

message GuildExtraInfo {
  repeated GuildMember    Members = 1;
  repeated GuildApplicant Players = 2;
  repeated GuildLog       Logs    = 3;
}

message GuildChatInfo {
  CSDTPlayerSimpleInfo Player       = 1;
  string               Content      = 2;
  uint32               Emotion      = 3;
  bool                 NeedLocalize = 4;
  int64                Timestamp    = 5;
  CHATSOURCETYPE       SourceType   = 6; //聊天来源类型
}

// 公会角色
enum GUILDROLETYPE {
  ROLETYPENULL = 0;
  MEMBER       = 1;     // 成员
  OFFICER      = 10;    // 官员
  VICE         = 20;    // 副社长
  OWNER        = 30;    // 社长
}

enum GUILDPERMITTYPE {
  GUILDPERMIT_NULL  = 0;
  GUILDPERMIT_FREE  = 1;
  GUILDPERMIT_LIMIT = 2;
}

message GuildLog {
  string              Key     = 1;  // 事件key
  map<string, string> Para    = 2;  // 事件参数
  bool                ps4Only = 3;
  bool                ps      = 4;
  int64               Ts      = 6;  // 秒时间戳
}

message GuildApplyInfo {
  CSDTPlayerSimpleInfo Player = 1; // 玩家基本信息
  int64                Ts     = 2; // 申请时间
}

message GuildPlayerRole {
  string        Player = 1;
  GUILDROLETYPE Role   = 2;
  uint32        Active = 3;
}

message ChestRecord {
  repeated uint32 Awards = 1; // 已抽取奖励
  uint32          Round  = 2; // 抽了几轮
}

// 队伍描述
message TeamDesc {
  uint32         TeamID    = 1;
  TournamentDesc GroupDesc = 2;        // 赛事组key，非赛事房间为空
}

enum TeamState {
  Idle       = 0; // 空闲
  Matching   = 1; // 匹配中
  Pvp        = 2; // 战斗中
  Dismissed  = 3; // 已解散
  Invalid    = 4; // 用于返回错误
  StateCount = 5; // 枚举数量
}

message CSDTTaskItem {
  uint32 Id       = 1;    //任务ID
  uint32 Progress = 2;    //任务进度
  bool   GetAward = 3;    //是否领奖
}

message OssPlayerData {
  string Data       = 1;
  string InviteCode = 2;
}

message BattleExtData {
  int32                    TicketID              = 1;  // 门票ID
  int32                    TicketNum             = 2;  // 门票数量
  repeated int32           RankRewardList        = 3;  // 门票奖励分成(按排名从低到高指定百分比)
  uint32                   MapID                 = 4;  // 地图id
  uint32                   SubMapID              = 5;  // 地图子模式
  int32                    CurrencyNum           = 6;  // 货币数量
  int32                    Version               = 7;  // 地图版本号
  int32                    BountyBaseCurrencyNum = 8; // 作者投注的金额
  map<string, int32>       PlayersBetCurrencyNum = 9; // 玩家投注
  string                   AuthorId              = 10; // 作者id
  int32                    sysPercent            = 11; // 系统抽成比例
  int32                    sysDrawAuthorPercent  = 12; // 系统对作者的抽成比例
  int32                    authorPercent         = 13; // 作者抽成
  repeated KernelChessInfo ChessList             = 14; // 公共卡池
  bool                     CustomCardFlag        = 15; // 是否是自定义组卡玩法
  string                   MapKey                = 16; // 地图Key(对应开放平台uniqueCode字段)
}

// BattleExtData主要是创意工坊在使用,代码中有通过ext是否有空判断,所以单独创建一个字段避免耦合
// 尽量不用通过此结构里的字段是否有空来判断是什么类型
message PvpExtData {
  PvpBigWinnerData BigWinner        = 1; // 大赢家
  uint32           Submode          = 2; // 子模式，目前 新手和实战模式会使用到
  uint32           PvpChestVipLevel = 3; // 房间vip等级
  repeated uint32  PveDebuff        = 4; //
  string           MapKey           = 5; //pve对应的mapkey
  string           Captain          = 6; //房间房主
  bool             IsCardGroup      = 7; //是否为卡组
  int32            TDStage          = 8; //塔防关卡
  PveMode          PveChallengeMode = 9; //幻形试炼子模式难度，0普通，1噩梦
}

enum PveMode {
  Classic   = 0; //经典模式
  Nightmare = 1; //噩梦模式
}


// 用户的信息
message PlayerExtMap{
  map<string, int32>     AssistantMap   = 1;//玩家的辅助系数:playerid:辅助系数id
  map<string, uint32>    BattleTimeMap  = 2;//玩家战斗时长(抛开准备时间):playerid:战斗时长(抛开准备时间)
  map<string, Buffs>     PveBuff        = 3; //玩家带入pve得buff:playerid:[]buffids
  map<string, string>    MsRelation     = 4; //师徒关系
  map<string, TEAMGROUP> PvpPlayerGroup = 5;//pvp相关玩家分组
}
message Buffs {
  repeated uint32 Data = 1;
}
// 创意工坊快捷入口的操作
enum ShortcutMapsOP {
  MoveIn  = 0;  // 将地图移入快捷入口
  MoveOut = 1;  // 将地图移出快捷入口
  OPCount = 2;
}

// 单个活动组的全部数据
message ActivityGroup {
  ActivityGroupData     Group      = 1;   // 活动组数据
  repeated ActivityData Activities = 2;   // 活动组对应活动数据
}

// 登录时回复玩家已评分的地图
message ScoredMap {
  uint32 MapID  = 1;
  bool   IsLike = 2;
}

enum TransferEventType {
  Preserved       = 0; // 0值保留，以防忘记赋值
  Slient          = 1; // 代币后台打入对方账户，不需要玩家主动操作，如结算给创意工坊作者的奖励
  OfficialAccount = 2; // 给官方账户转账，如三方平台发起的转账
}

// 代币变更事件
message TransferEvent {
  TransferEventType EType        = 1;
  int32             TokenID      = 2;
  int32             TokenCount   = 3;
  string            Payee        = 4; // 收款方ID
  string            RedHSetField = 5; // redis HSET field
}

// 通过globalserver转账的operation
message TransferOP {
  string PayeeID = 1; // 收款方ID
  uint32 TokenID = 2; // 代币ID
  int32  Change  = 3; // 代币变化量（可为负）
  string UUID    = 4; // 唯一标识本次兑换的id
}

// 赏金房间投注信息
message CSDTBetData {
  int32              BetFromAuthor  = 1;   // 作者投注
  string             AuthorId       = 2;   // 作者id
  map<string, int32> BetFromPlayers = 3;   // 玩家投注
}

message MailExtData {
  repeated ExtItem Items = 1;
}

message ExtItem {
  int32          Id         = 1;  //奖励物品ID
  int32          Count      = 2;  //奖励物品数量
  repeated int64 Para       = 3;  //辅助参数
  string         InstanceId = 4;  //实例ID
  int32          Weight     = 5;  //权重
  int32          Price      = 6;  //单价
  int32          SourceIdx  = 7;  //来源的索引
}

//观战赛事模式
enum OBSERVERACEMODE {
  OBSERVE_RACE_TOURNAMENT = 0;  //锦标赛比赛
  OBSERVE_RACE_MAX        = 100;      //预留100个Game使用,101后的提供给GM后台配置
}

enum TASKTYPE {
  DEFAULT = 0;
  TROPHY  = 1; //ps 成就奖杯任务
  ACHIEVE = 2; //成就勋章任务
}

message CSDTTasks{
  repeated CSDTTaskItem Trophy  = 1; // ps4奖杯任务
  repeated CSDTTaskItem Achieve = 2; // 勋章成就任务
}

//教学关卡结果
message PvpTeachResult {
  uint32 PassId = 1; // 教学关卡ID
  bool   Win    = 2; // 通关
}

//大玩家数据
message PvpBigWinnerData {
  uint32          Id             = 1;  //场次ID
  uint32          MapId          = 2;  //地图ID
  uint32          SysPercent     = 3;  //系统抽成
  repeated uint32 RankRewardList = 4;//分配比例
  string          ConfigName     = 5;  //大赢家内核配置文件
}

//PVE 年兽数据
message PveExData {
  map<string, int32> Talent = 1; //天赋等级 {天赋系列ID,等级}
}

enum UserRestrictType {
  UNLIMITED = 0; // 普通用户
  UNDER_AGE = 1; // 未成年用户
}

// 赛事冠军信息
message ChampionInfo {
  uint32 Zone   = 1;    // 赛区
  uint32 Period = 2;    // 届数
  string Id     = 3;    // 冠军id
}

// 赛事前8信息
message TopRank {
  uint32          Zone   = 1;        // 赛区
  uint32          Period = 2;        // 届数
  repeated string Rank   = 3;        // 前8
}

// 冠军列表信息
message ChampionInfoList {
  repeated ChampionInfo list = 1; // 冠军信息列表
}

// 赛事历史信息
message TournamentHistory {
  map<uint32, ChampionInfoList> ChampionHistory = 1;    // 赛区与历届冠军列表映射
  map<uint32, TopRank>          TopRankHistory  = 2;    // 赛区与上届前八排名
}

//登陆Req
message CSReqLogin {
  string              DeviceId           = 1;   //设备Id
  PLATFORMTYPE        PlatformType       = 2;   //平台类型
  string              OsVersion          = 3;   //操作系统版本
  string              DeviceType         = 4;   //设备型号
  NETTYPE             NetType            = 5;   //网络类型
  LOGINTYPE           LoginType          = 6;   //登陆类型
  string              Id                 = 7;   //id
  string              LySdkDeviceId      = 8;   //龙渊数据采集SDK中的设备Id
  string              ChannelId          = 9;   //渠道Id(字符串)
  string              PackageId          = 10;  //渠道包Id
  string              ApkVersion         = 11;  //应用包版本
  string              Resolution         = 12;  //运营商
  CHANELTYPE          ChannelType        = 13;  //渠道类型
  map<string, string> AuthSDKCode        = 14;  //验证SDK code
  string              SessionId          = 15;  //用于客户端游戏中重连服务器
  string              ChannelUserId      = 16;  //渠道用户Id
  string              PvpResourceVersion = 17;//资源版本号
  CHANELTYPE          PayChannel         = 18;  //支付渠道
  string              ActiveCode         = 19;  //激活码
  string              Language           = 20;
  string              Country            = 21;
  LAUNCHTYPE          LaunchType         = 22; // 启动类型
  string              Ip                 = 23; // ip
  string              PicUrl             = 24; // 头像URL
  string              FengkongDeviceId   = 25; // 风控deviceId
  string              GameLanguage       = 26; // 游戏语言
  int64               GamelibVersion     = 27; // 内核版本
  string              AdvertisingId      = 28; // 广告id
  repeated string     PSBlockedUsers     = 29; // playstation 用户的黑名单
  bytes               Result             = 30; // authserver验证结果
  LOGINSOURCE         LoginSource        = 31; //登录来源
}

//活动物品类型
enum OUTPUT_ITEM_TYPE {
  ITEM_NORMAL = 0;   //正常
  ITEM_LOW    = 1; //低级
  ITEM_HIGH   = 2; //高级
}

message Loc {
  uint32 X = 1; //x位置
  uint32 Y = 2; //y位置
}

//官方特权数据
message Authority {
  bool   Mark  = 1; //标记
  uint32 Level = 2; //等级
}

enum LOGINSOURCE {
  NORMAL_LOGIN   = 0;//端手游登录
  BLACKBOX_LOGIN = 1;//小黑盒登录
}


message GetNumRank {
  RANKTYPE   Type         = 1;    //排行榜类型
  string     Country      = 2;    //国家 如果是腾讯渠道 省份ID
  uint64     TournamentId = 3;    //赛事id
  uint64     ClassId      = 4;    //级别id
  uint64     RoundId      = 5;    //轮次id 在获取轮次排行或者组内排行才填充
  bool       SelfRank     = 6;    //只拉取自己的名次
  uint32     GroupIndex   = 7;    //组id
  CHANELTYPE ChannelType  = 8;    //玩家渠道类型
  string     TargetPlayer = 9;    //指定玩家排名--SelfRank为TRUE并且这个字段不为空 则拉取指定玩家
}


enum PASSPORTCARDTYPE {
  NO_CARD_TYPE       = 0; //普通包没编号
  DEFAULT_CARD_TYPE  = 1; //默认编号类型
  GRADUATE_CARD_TYPE = 2;//毕业包编号类型
  YEAR_CARD_TYPE     = 3;//年卡编号类型
  MAX_CARD_TYPE      = 4;//违法年卡编号类型
}

message CSDTPassportCard {
  repeated uint32 TypeIdList = 1; //通行证类型
  uint32          Level      = 2; //通行证等级
}

//活动物品类型
enum PVE_BUFF_TYPE {
  BUFF_NONE         = 0;   //正常
  BUFF_PROP         = 1;   //道具
  BUFF_STATION_GAIN = 2;   //局内增益
  BUFF_VIP          = 3;   //特权buff
  BUFF_DEBUFF       = 4;   //debuff
  BUFF_KERNEL       = 5;   //局内三选一buff
  BUFF_SUPER_VIP    = 6;   //超级vip
}

enum CHESS_QUALITY {
  NORMAL_CHESS   = 0;  //普通
  RARE_CHESS     = 1;  //罕见
  UNCOMMON_CHESS = 2;  //稀有
  EPIC_CHESS     = 3;  //史诗
  LEGEND_CHESS   = 4;  //传说
  ALL_CHESS      = 99; //全部
}


message PveDataInfo {
  map<uint32, Pve> Data = 1; //PVE ID : Pve data
}

message Pve {
  uint32               Score     = 1;
  map<uint32, bool>    ChessIds  = 2; // chessid : 是否装配
  map<uint32, bool>    Skills    = 3; // skilid  : 是否装配
  map<uint32, PveBuff> Buff      = 4;
  uint32               RankScore = 5;
  string               TeamName  = 6;
  bool                 Unlock    = 7; //是否解锁噩梦模式
}

message PveBuff {
  uint32 Count = 1; //数量
  int64  Etime = 2; //结束时间
}

message CardGroupData{
  repeated CardGroupChess ChessIds            = 1; //棋子id
  uint32                  AutoAddCardTimes    = 2; // 自动加入常用列表的次数 0 代表不添加
  bool                    IsAutoAddCardKernel = 3; // 开局是否自动注入常用棋子
  bool                    Flag                = 4; //解锁卡组的标记
  repeated uint32         RemoveChessIds      = 5; //登陆得时候下发 删除的违规棋子
  bool                    KernelFlag          = 6; //局内新手引导
}

message CardGroupChess {
  uint32 Id    = 1;//棋子id
  int64  Ctime = 2;//排序时间
}



message ChessIds {
  repeated uint32 Ids = 1;
}

enum PVECONSUMETYPE {
  CONSUME_SCORE = 0;
  CONSUME_ITEM  = 1;
}


message PveConsume {
  PVECONSUMETYPE Type  = 1; //消耗类型
  uint32         Id    = 2;
  uint32         Count = 3; //数量
}

enum PVECHESSTYPE {
  CHESS = 0; //购买棋子
  SKILL = 1; //购买技能
}

message PveSetting {
  repeated uint32 DeBuffIds = 1; //词缀ids
}

message PlayerTeamInfo {
  string MapKey = 1; //创意工坊唯一key
}

enum PVESKILLTYPE {
  INITIATIVE = 0; //主动
  PASSIVE    = 1; //被动

}

enum PVERANKTYPE {
  RANK_CHALLENGE = 0; // pve活动挑战排行榜
  RANK_CUSTOM    = 1; // 创意工坊挑战排行榜
}

message PveRankRedisInfo {
  string Caption  = 1; //队长id
  string TeamName = 2;// 队伍名
}

message CSDTPlayerPvpData {
  PveDataInfo   Pve       = 1;
  CardGroupData CardGroup = 2;
}

message GmBan {
  FROZEN_TYPE FType     = 1;//封禁类型
  int64       StartTime = 2;//封禁开始时间
  int64       EndTime   = 3;//封禁结束时间
  string      Reason    = 4;//封禁原因
}

enum MENTORSHIP {
  MENTOR        = 0; //师傅
  PUPIL         = 1; //徒弟
  NONE_RELATION = 2; //非徒弟 非师傅
}

enum MENTORSHIPTASK {
  ILLEGAL_ARCHIVE       = 0;//非法任务类型
  MENTOR_ARCHIVE        = 1;// 师傅成就任务
  MENTRO_PUPIL_ARCHIVE  = 2; //徒弟任务-师傅获取的徒弟修习任务
  MENTRO_PUPIL_GRADUATE = 3; //师傅获取的徒弟出师后任务
}

enum MENTORREACH {
  ERROR_TYPE      = 0;
  MAX_HISTORY_MMR = 1;//历史最高mmr
  LEAVEL          = 2; //等级
  PUPIL_MMR       = 3; //徒弟mmr
}

enum MENTORADDN {
  MMR              = 0; //排位mmr加成
  EXP              = 1; //经验加成
  PASSPORT_INTEGER = 2;//通行证积分加成
}

message MentorInviteMsg {//师徒邀约信息
  MENTORSHIP      Type         = 1; //邀约类型
  string          Id           = 2; //邀请人
  int64           Ctime        = 3; //创建时间
  string          Content      = 4; //拜师/收徒 内容
  repeated uint32 CompleteTask = 5; //已经完成的任务 服务器使用
}

message MentorInfo {
  MENTORLEVEL               Level       = 1; //师傅等级
  repeated Pupil            Pupils      = 2; //徒弟们
  uint32                    InviteTimes = 3; //邀请次数CSDTBase 这个没用 就不改协议了。。。
  repeated int64            PunishTime  = 4; //关系解除惩罚冷却时间
  map<uint32, CSDTTaskItem> Tasks       = 5;//师傅的成就任务
  uint32                    GraduateNum = 6; //毕业玩家数量
}

message Pupil {
  map<uint32, CSDTTaskItem> Tasks             = 1;//徒弟修行任务
  int64                     GraduateTime      = 2;//出师时间
  string                    Id                = 3;// 徒弟id
  PUPILSTAT                 Stat              = 4;// 徒弟当前状态
  int64                     ApplyGraduateTime = 5;//申请出师时间
  int64                     Intimacy          = 6;//亲密度
}

enum MENTORLEVEL {
  ILLEGAL_LEVEL = 0;//错误等级类型
  COPPER_LEVEL  = 1; //铜等级
  SILVER_LEVEL  = 2;// 银等级
  GOLD_LEVEL    = 3;// 金等级
  MAX_LEVEL     = 4;// 最大等级
}

enum MENTORRECOMMEND {
  MENTOR_RANK      = 0; //师傅 推荐排行榜
  MENTOR_RAND_LIST = 1; //师傅 推荐活跃推荐
  PUPIL_RANK       = 2; //徒弟推荐排行榜
}

//假结构体
message TDUnUse{
  TDItemId    Id1        = 1;
  TDItemId    Id2        = 2;
  TDItemId    Id3        = 3;
  TDItemGroup ItemGroup1 = 4;
  TDItemGroup ItemGroup2 = 5;
}

message TDItemId {
  int32 Id    = 1; // (tag.bson)="id"    id, db内不存储
  int32 Level = 2; // (tag.bson)="lv"   等级
}

message TDItem {
  int32                 Id          = 1; // (tag.bson)="-"    id, db内不存储
  int32                 Level       = 2; // (tag.bson)="lv"   等级
  int32                 TalentLevel = 3; // (tag.bson)="tlv,omitempty"  天赋等级 棋盘才拥有的属性， 棋手和棋子则没有
  int32                 Count       = 4; // (tag.bson)="cnt"
  map<string, TDItemId> Equipments  = 5; // (tag.bson)="equip,omitempty"  棋子属性 key：槽位
}

enum PUPILSTAT {
  PRACTICE                 = 0;// 修行状态
  REMOVE                   = 1; //解除关系
  GRADUATE                 = 2; //毕业
  PUPIL_GRADUATE_APPLYING  = 3;// 徒弟毕业申请中
  MENTOR_GRADUATE_APPLYING = 4;// 师傅毕业申请中
  LIMIT_REMOVE             = 5;// 毕业徒弟超出上限被删除
}

message AddRecommendData {
  string PlayerId = 1; // 玩家id
  uint32 Mmr      = 2; //
  uint32 Level    = 3; //
}

message PlayerMentorShipInfo {
  bool                      IsMentor     = 1;// 是否为师傅
  string                    MentorId     = 2; //师傅id
  string                    Sign         = 3; //签名
  bool                      InviteSwitch = 4; //接受消息开关
  uint32                    Tag          = 5; //标签
  int64                     PunishTime   = 6; //惩罚冷却时间
  bool                      IsGraduate   = 7; //是否毕业
  map<uint32, CSDTTaskItem> Tasks        = 8; //徒弟成就任务
  uint32                    InviteTimes  = 9; // 邀请次数 师傅的
}

message CSDTMentorRecommendPlayer {
  string PlayerId = 1;
}

message PFDTTaskDetail {
  CONDTYPE       CondType = 1;
  repeated int32 Para     = 2;
  string         Mode     = 3;
}

message CSDTMentorInfo {//师傅相关得信息 只有请求req_base_info req_detail_info 里面返回
  MENTORLEVEL Level = 1;
}

enum  KERNELJSONTYPE{
  NONE_TYPE     = 0;
  BATTLE_BUFFER = 1; //战斗buffer
  STATE_JSON    = 2; //状态数据
  OTHER         = 3; //其他数据
}


message OBPassThroughData {
  KERNELJSONTYPE Type        = 1;// 类型
  uint32         Round       = 2;//回合数据
  string         PvPPlayerId = 3;// 战斗玩家数据
  string         ObPlayerId  = 4; //观战服谁发送得
}
message HistoryMaxCupMmr {
  PVPMODE Mode   = 1; //模式
  uint32  Mmr    = 2; //mmr
  uint32  Period = 3; //赛季
}

message CSNtfPvpChat{
  string              Id              = 1;
  string              Content         = 2;
  uint32              Emotion         = 3;
  uint32              Level           = 4;
  CHATTYPE            ChatType        = 5;
  uint32              Index           = 6;
  int32               QuickChat       = 7;
  string              UserName        = 8;
  uint32              HeadPic         = 9;
  string              Country         = 10;
  map<uint32, uint32> ShowItems       = 11;
  bool                IsWatcher       = 12;
  uint32              Province        = 13;
  int64               Timestamp       = 14;
  PLATFORMTYPE        Platform        = 15;
  repeated uint32     PassportTypeIds = 16;
  CHANELTYPE          ChannelType     = 17;    // ps4 Only 额外信息
  string              ChannelUsrId    = 18;    // ps4 Only 额外信息
  bool                PS4Only         = 19;    // ps4 Only 开关
  UserRestrictType    RestrictType    = 20;    // 用户限制
  string              GuildName       = 21;    // 公会名字
  int32               GuildSign       = 22;    // 公会图标
  CHATSOURCETYPE      SourceType      = 23;   // 聊天来源类型
  EXCHANGESTATE       ExchangeState   = 24;   //交易状态
}

message PlayerObServerInfo {
  uint64 PvpId      = 1;    //pvpid
  uint32 ObSvrId    = 2;    //podid
  string ObplayerId = 3; //登录到观战的pvpserverId
  uint32 PvpSvrId   = 4; //pvpserverid
}